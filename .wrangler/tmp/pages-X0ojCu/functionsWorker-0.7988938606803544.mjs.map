{
  "version": 3,
  "sources": ["../bundle-RYqzE3/checked-fetch.js", "wrangler-modules-watch:wrangler:modules-watch", "../../../node_modules/wrangler/templates/modules-watch-stub.js", "../../../node_modules/cheerio/lib/esm/types.js", "../../../node_modules/cheerio/lib/esm/options.ts", "../../../node_modules/domelementtype/lib/esm/index.js", "../../../node_modules/domhandler/lib/esm/node.js", "../../../node_modules/domhandler/lib/esm/index.js", "../../../node_modules/entities/lib/esm/generated/generated/decode-data-html.ts", "../../../node_modules/entities/lib/esm/generated/generated/decode-data-xml.ts", "../../../node_modules/entities/lib/esm/decode_codepoint.ts", "../../../node_modules/entities/lib/esm/decode.ts", "../../../node_modules/entities/lib/esm/generated/generated/encode-html.ts", "../../../node_modules/entities/lib/esm/escape.ts", "../../../node_modules/entities/lib/esm/encode.ts", "../../../node_modules/entities/lib/esm/index.ts", "../../../node_modules/dom-serializer/lib/esm/foreignNames.js", "../../../node_modules/dom-serializer/lib/esm/index.js", "../../../node_modules/domutils/lib/esm/stringify.ts", "../../../node_modules/domutils/lib/esm/traversal.ts", "../../../node_modules/domutils/lib/esm/manipulation.ts", "../../../node_modules/domutils/lib/esm/querying.ts", "../../../node_modules/domutils/lib/esm/legacy.ts", "../../../node_modules/domutils/lib/esm/helpers.ts", "../../../node_modules/domutils/lib/esm/feeds.ts", "../../../node_modules/domutils/lib/esm/index.ts", "../../../node_modules/cheerio/lib/esm/static.ts", "../../../node_modules/cheerio/lib/esm/utils.ts", "../../../node_modules/cheerio/lib/esm/api/api/attributes.ts", "../../../node_modules/css-what/lib/es/types.js", "../../../node_modules/css-what/lib/es/parse.js", "../../../node_modules/css-what/lib/es/index.js", "../../../node_modules/boolbase/index.js", "../../../node_modules/css-select/lib/esm/sort.ts", "../../../node_modules/css-select/lib/esm/attributes.ts", "../../../node_modules/nth-check/lib/esm/parse.ts", "../../../node_modules/nth-check/lib/esm/compile.ts", "../../../node_modules/nth-check/lib/esm/index.ts", "../../../node_modules/css-select/lib/esm/pseudo-selectors/pseudo-selectors/filters.ts", "../../../node_modules/css-select/lib/esm/pseudo-selectors/pseudo-selectors/pseudos.ts", "../../../node_modules/css-select/lib/esm/pseudo-selectors/pseudo-selectors/aliases.ts", "../../../node_modules/css-select/lib/esm/pseudo-selectors/pseudo-selectors/subselects.ts", "../../../node_modules/css-select/lib/esm/pseudo-selectors/pseudo-selectors/index.ts", "../../../node_modules/css-select/lib/esm/general.ts", "../../../node_modules/css-select/lib/esm/compile.ts", "../../../node_modules/css-select/lib/esm/index.ts", "../../../node_modules/cheerio-select/lib/esm/positionals.ts", "../../../node_modules/cheerio-select/lib/esm/helpers.ts", "../../../node_modules/cheerio-select/lib/esm/index.ts", "../../../node_modules/cheerio/lib/esm/api/api/traversing.ts", "../../../node_modules/cheerio/lib/esm/parse.ts", "../../../node_modules/cheerio/lib/esm/api/api/manipulation.ts", "../../../node_modules/cheerio/lib/esm/api/api/css.ts", "../../../node_modules/cheerio/lib/esm/api/api/forms.ts", "../../../node_modules/cheerio/lib/esm/cheerio.ts", "../../../node_modules/cheerio/lib/esm/load.ts", "../../../node_modules/parse5/dist/common/unicode.js", "../../../node_modules/parse5/dist/common/error-codes.js", "../../../node_modules/parse5/dist/tokenizer/preprocessor.js", "../../../node_modules/parse5/dist/common/token.js", "../../../node_modules/parse5/dist/common/html.js", "../../../node_modules/parse5/dist/tokenizer/index.js", "../../../node_modules/parse5/dist/parser/open-element-stack.js", "../../../node_modules/parse5/dist/parser/formatting-element-list.js", "../../../node_modules/parse5/dist/tree-adapters/default.js", "../../../node_modules/parse5/dist/common/doctype.js", "../../../node_modules/parse5/dist/common/foreign-content.js", "../../../node_modules/parse5/dist/parser/index.js", "../../../node_modules/parse5/dist/serializer/index.js", "../../../node_modules/parse5/dist/index.js", "../../../node_modules/parse5-htmlparser2-tree-adapter/dist/index.js", "../../../node_modules/cheerio/lib/esm/parsers/parsers/parse5-adapter.ts", "../../../node_modules/htmlparser2/lib/esm/Tokenizer.ts", "../../../node_modules/htmlparser2/lib/esm/Parser.ts", "../../../node_modules/htmlparser2/lib/esm/index.ts", "../../../node_modules/cheerio/lib/esm/index.ts", "../../../functions/lib/const.ts", "../../../functions/lib/index.ts", "../../../functions/api/articles/[[catchall]].ts", "functionsRoutes-0.27685670474138924.mjs", "../bundle-RYqzE3/middleware-loader.entry.ts", "../bundle-RYqzE3/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/pages-template-worker.ts", "../../../node_modules/path-to-regexp/src/index.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../../../node_modules/wrangler/templates/middleware/common.ts"],
  "sourceRoot": "C:\\works\\github\\news-monitor-react\\.wrangler\\tmp\\pages-X0ojCu\\functionsWorker-0.7988938606803544.mjs",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t  );\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "", "// `esbuild` doesn't support returning `watch*` options from `onStart()`\n// plugin callbacks. Instead, we define an empty virtual module that is\n// imported by this injected file. Importing the module registers watchers.\nimport \"wrangler:modules-watch\";\n", "export {};\n//# sourceMappingURL=types.js.map", null, "/** Types of elements found in htmlparser2's DOM */\nexport var ElementType;\n(function (ElementType) {\n    /** Type for the root element of a document */\n    ElementType[\"Root\"] = \"root\";\n    /** Type for Text */\n    ElementType[\"Text\"] = \"text\";\n    /** Type for <? ... ?> */\n    ElementType[\"Directive\"] = \"directive\";\n    /** Type for <!-- ... --> */\n    ElementType[\"Comment\"] = \"comment\";\n    /** Type for <script> tags */\n    ElementType[\"Script\"] = \"script\";\n    /** Type for <style> tags */\n    ElementType[\"Style\"] = \"style\";\n    /** Type for Any tag */\n    ElementType[\"Tag\"] = \"tag\";\n    /** Type for <![CDATA[ ... ]]> */\n    ElementType[\"CDATA\"] = \"cdata\";\n    /** Type for <!doctype ...> */\n    ElementType[\"Doctype\"] = \"doctype\";\n})(ElementType || (ElementType = {}));\n/**\n * Tests whether an element is a tag or not.\n *\n * @param elem Element to test\n */\nexport function isTag(elem) {\n    return (elem.type === ElementType.Tag ||\n        elem.type === ElementType.Script ||\n        elem.type === ElementType.Style);\n}\n// Exports for backwards compatibility\n/** Type for the root element of a document */\nexport const Root = ElementType.Root;\n/** Type for Text */\nexport const Text = ElementType.Text;\n/** Type for <? ... ?> */\nexport const Directive = ElementType.Directive;\n/** Type for <!-- ... --> */\nexport const Comment = ElementType.Comment;\n/** Type for <script> tags */\nexport const Script = ElementType.Script;\n/** Type for <style> tags */\nexport const Style = ElementType.Style;\n/** Type for Any tag */\nexport const Tag = ElementType.Tag;\n/** Type for <![CDATA[ ... ]]> */\nexport const CDATA = ElementType.CDATA;\n/** Type for <!doctype ...> */\nexport const Doctype = ElementType.Doctype;\n", "import { ElementType, isTag as isTagRaw } from \"domelementtype\";\n/**\n * This object will be used as the prototype for Nodes when creating a\n * DOM-Level-1-compliant structure.\n */\nexport class Node {\n    constructor() {\n        /** Parent of the node */\n        this.parent = null;\n        /** Previous sibling */\n        this.prev = null;\n        /** Next sibling */\n        this.next = null;\n        /** The start index of the node. Requires `withStartIndices` on the handler to be `true. */\n        this.startIndex = null;\n        /** The end index of the node. Requires `withEndIndices` on the handler to be `true. */\n        this.endIndex = null;\n    }\n    // Read-write aliases for properties\n    /**\n     * Same as {@link parent}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get parentNode() {\n        return this.parent;\n    }\n    set parentNode(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Same as {@link prev}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get previousSibling() {\n        return this.prev;\n    }\n    set previousSibling(prev) {\n        this.prev = prev;\n    }\n    /**\n     * Same as {@link next}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get nextSibling() {\n        return this.next;\n    }\n    set nextSibling(next) {\n        this.next = next;\n    }\n    /**\n     * Clone this node, and optionally its children.\n     *\n     * @param recursive Clone child nodes as well.\n     * @returns A clone of the node.\n     */\n    cloneNode(recursive = false) {\n        return cloneNode(this, recursive);\n    }\n}\n/**\n * A node that contains some data.\n */\nexport class DataNode extends Node {\n    /**\n     * @param data The content of the data node\n     */\n    constructor(data) {\n        super();\n        this.data = data;\n    }\n    /**\n     * Same as {@link data}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get nodeValue() {\n        return this.data;\n    }\n    set nodeValue(data) {\n        this.data = data;\n    }\n}\n/**\n * Text within the document.\n */\nexport class Text extends DataNode {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Text;\n    }\n    get nodeType() {\n        return 3;\n    }\n}\n/**\n * Comments within the document.\n */\nexport class Comment extends DataNode {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Comment;\n    }\n    get nodeType() {\n        return 8;\n    }\n}\n/**\n * Processing instructions, including doc types.\n */\nexport class ProcessingInstruction extends DataNode {\n    constructor(name, data) {\n        super(data);\n        this.name = name;\n        this.type = ElementType.Directive;\n    }\n    get nodeType() {\n        return 1;\n    }\n}\n/**\n * A `Node` that can have children.\n */\nexport class NodeWithChildren extends Node {\n    /**\n     * @param children Children of the node. Only certain node types can have children.\n     */\n    constructor(children) {\n        super();\n        this.children = children;\n    }\n    // Aliases\n    /** First child of the node. */\n    get firstChild() {\n        var _a;\n        return (_a = this.children[0]) !== null && _a !== void 0 ? _a : null;\n    }\n    /** Last child of the node. */\n    get lastChild() {\n        return this.children.length > 0\n            ? this.children[this.children.length - 1]\n            : null;\n    }\n    /**\n     * Same as {@link children}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get childNodes() {\n        return this.children;\n    }\n    set childNodes(children) {\n        this.children = children;\n    }\n}\nexport class CDATA extends NodeWithChildren {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.CDATA;\n    }\n    get nodeType() {\n        return 4;\n    }\n}\n/**\n * The root node of the document.\n */\nexport class Document extends NodeWithChildren {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Root;\n    }\n    get nodeType() {\n        return 9;\n    }\n}\n/**\n * An element within the DOM.\n */\nexport class Element extends NodeWithChildren {\n    /**\n     * @param name Name of the tag, eg. `div`, `span`.\n     * @param attribs Object mapping attribute names to attribute values.\n     * @param children Children of the node.\n     */\n    constructor(name, attribs, children = [], type = name === \"script\"\n        ? ElementType.Script\n        : name === \"style\"\n            ? ElementType.Style\n            : ElementType.Tag) {\n        super(children);\n        this.name = name;\n        this.attribs = attribs;\n        this.type = type;\n    }\n    get nodeType() {\n        return 1;\n    }\n    // DOM Level 1 aliases\n    /**\n     * Same as {@link name}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get tagName() {\n        return this.name;\n    }\n    set tagName(name) {\n        this.name = name;\n    }\n    get attributes() {\n        return Object.keys(this.attribs).map((name) => {\n            var _a, _b;\n            return ({\n                name,\n                value: this.attribs[name],\n                namespace: (_a = this[\"x-attribsNamespace\"]) === null || _a === void 0 ? void 0 : _a[name],\n                prefix: (_b = this[\"x-attribsPrefix\"]) === null || _b === void 0 ? void 0 : _b[name],\n            });\n        });\n    }\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node is a `Element`, `false` otherwise.\n */\nexport function isTag(node) {\n    return isTagRaw(node);\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `CDATA`, `false` otherwise.\n */\nexport function isCDATA(node) {\n    return node.type === ElementType.CDATA;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Text`, `false` otherwise.\n */\nexport function isText(node) {\n    return node.type === ElementType.Text;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Comment`, `false` otherwise.\n */\nexport function isComment(node) {\n    return node.type === ElementType.Comment;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */\nexport function isDirective(node) {\n    return node.type === ElementType.Directive;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */\nexport function isDocument(node) {\n    return node.type === ElementType.Root;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has children, `false` otherwise.\n */\nexport function hasChildren(node) {\n    return Object.prototype.hasOwnProperty.call(node, \"children\");\n}\n/**\n * Clone a node, and optionally its children.\n *\n * @param recursive Clone child nodes as well.\n * @returns A clone of the node.\n */\nexport function cloneNode(node, recursive = false) {\n    let result;\n    if (isText(node)) {\n        result = new Text(node.data);\n    }\n    else if (isComment(node)) {\n        result = new Comment(node.data);\n    }\n    else if (isTag(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new Element(node.name, { ...node.attribs }, children);\n        children.forEach((child) => (child.parent = clone));\n        if (node.namespace != null) {\n            clone.namespace = node.namespace;\n        }\n        if (node[\"x-attribsNamespace\"]) {\n            clone[\"x-attribsNamespace\"] = { ...node[\"x-attribsNamespace\"] };\n        }\n        if (node[\"x-attribsPrefix\"]) {\n            clone[\"x-attribsPrefix\"] = { ...node[\"x-attribsPrefix\"] };\n        }\n        result = clone;\n    }\n    else if (isCDATA(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new CDATA(children);\n        children.forEach((child) => (child.parent = clone));\n        result = clone;\n    }\n    else if (isDocument(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new Document(children);\n        children.forEach((child) => (child.parent = clone));\n        if (node[\"x-mode\"]) {\n            clone[\"x-mode\"] = node[\"x-mode\"];\n        }\n        result = clone;\n    }\n    else if (isDirective(node)) {\n        const instruction = new ProcessingInstruction(node.name, node.data);\n        if (node[\"x-name\"] != null) {\n            instruction[\"x-name\"] = node[\"x-name\"];\n            instruction[\"x-publicId\"] = node[\"x-publicId\"];\n            instruction[\"x-systemId\"] = node[\"x-systemId\"];\n        }\n        result = instruction;\n    }\n    else {\n        throw new Error(`Not implemented yet: ${node.type}`);\n    }\n    result.startIndex = node.startIndex;\n    result.endIndex = node.endIndex;\n    if (node.sourceCodeLocation != null) {\n        result.sourceCodeLocation = node.sourceCodeLocation;\n    }\n    return result;\n}\nfunction cloneChildren(childs) {\n    const children = childs.map((child) => cloneNode(child, true));\n    for (let i = 1; i < children.length; i++) {\n        children[i].prev = children[i - 1];\n        children[i - 1].next = children[i];\n    }\n    return children;\n}\n", "import { ElementType } from \"domelementtype\";\nimport { Element, Text, Comment, CDATA, Document, ProcessingInstruction, } from \"./node.js\";\nexport * from \"./node.js\";\n// Default options\nconst defaultOpts = {\n    withStartIndices: false,\n    withEndIndices: false,\n    xmlMode: false,\n};\nexport class DomHandler {\n    /**\n     * @param callback Called once parsing has completed.\n     * @param options Settings for the handler.\n     * @param elementCB Callback whenever a tag is closed.\n     */\n    constructor(callback, options, elementCB) {\n        /** The elements of the DOM */\n        this.dom = [];\n        /** The root element for the DOM */\n        this.root = new Document(this.dom);\n        /** Indicated whether parsing has been completed. */\n        this.done = false;\n        /** Stack of open tags. */\n        this.tagStack = [this.root];\n        /** A data node that is still being written to. */\n        this.lastNode = null;\n        /** Reference to the parser instance. Used for location information. */\n        this.parser = null;\n        // Make it possible to skip arguments, for backwards-compatibility\n        if (typeof options === \"function\") {\n            elementCB = options;\n            options = defaultOpts;\n        }\n        if (typeof callback === \"object\") {\n            options = callback;\n            callback = undefined;\n        }\n        this.callback = callback !== null && callback !== void 0 ? callback : null;\n        this.options = options !== null && options !== void 0 ? options : defaultOpts;\n        this.elementCB = elementCB !== null && elementCB !== void 0 ? elementCB : null;\n    }\n    onparserinit(parser) {\n        this.parser = parser;\n    }\n    // Resets the handler back to starting state\n    onreset() {\n        this.dom = [];\n        this.root = new Document(this.dom);\n        this.done = false;\n        this.tagStack = [this.root];\n        this.lastNode = null;\n        this.parser = null;\n    }\n    // Signals the handler that parsing is done\n    onend() {\n        if (this.done)\n            return;\n        this.done = true;\n        this.parser = null;\n        this.handleCallback(null);\n    }\n    onerror(error) {\n        this.handleCallback(error);\n    }\n    onclosetag() {\n        this.lastNode = null;\n        const elem = this.tagStack.pop();\n        if (this.options.withEndIndices) {\n            elem.endIndex = this.parser.endIndex;\n        }\n        if (this.elementCB)\n            this.elementCB(elem);\n    }\n    onopentag(name, attribs) {\n        const type = this.options.xmlMode ? ElementType.Tag : undefined;\n        const element = new Element(name, attribs, undefined, type);\n        this.addNode(element);\n        this.tagStack.push(element);\n    }\n    ontext(data) {\n        const { lastNode } = this;\n        if (lastNode && lastNode.type === ElementType.Text) {\n            lastNode.data += data;\n            if (this.options.withEndIndices) {\n                lastNode.endIndex = this.parser.endIndex;\n            }\n        }\n        else {\n            const node = new Text(data);\n            this.addNode(node);\n            this.lastNode = node;\n        }\n    }\n    oncomment(data) {\n        if (this.lastNode && this.lastNode.type === ElementType.Comment) {\n            this.lastNode.data += data;\n            return;\n        }\n        const node = new Comment(data);\n        this.addNode(node);\n        this.lastNode = node;\n    }\n    oncommentend() {\n        this.lastNode = null;\n    }\n    oncdatastart() {\n        const text = new Text(\"\");\n        const node = new CDATA([text]);\n        this.addNode(node);\n        text.parent = node;\n        this.lastNode = text;\n    }\n    oncdataend() {\n        this.lastNode = null;\n    }\n    onprocessinginstruction(name, data) {\n        const node = new ProcessingInstruction(name, data);\n        this.addNode(node);\n    }\n    handleCallback(error) {\n        if (typeof this.callback === \"function\") {\n            this.callback(error, this.dom);\n        }\n        else if (error) {\n            throw error;\n        }\n    }\n    addNode(node) {\n        const parent = this.tagStack[this.tagStack.length - 1];\n        const previousSibling = parent.children[parent.children.length - 1];\n        if (this.options.withStartIndices) {\n            node.startIndex = this.parser.startIndex;\n        }\n        if (this.options.withEndIndices) {\n            node.endIndex = this.parser.endIndex;\n        }\n        parent.children.push(node);\n        if (previousSibling) {\n            node.prev = previousSibling;\n            previousSibling.next = node;\n        }\n        node.parent = parent;\n        this.lastNode = null;\n    }\n}\nexport default DomHandler;\n", null, null, null, null, null, null, null, null, "export const elementNames = new Map([\n    \"altGlyph\",\n    \"altGlyphDef\",\n    \"altGlyphItem\",\n    \"animateColor\",\n    \"animateMotion\",\n    \"animateTransform\",\n    \"clipPath\",\n    \"feBlend\",\n    \"feColorMatrix\",\n    \"feComponentTransfer\",\n    \"feComposite\",\n    \"feConvolveMatrix\",\n    \"feDiffuseLighting\",\n    \"feDisplacementMap\",\n    \"feDistantLight\",\n    \"feDropShadow\",\n    \"feFlood\",\n    \"feFuncA\",\n    \"feFuncB\",\n    \"feFuncG\",\n    \"feFuncR\",\n    \"feGaussianBlur\",\n    \"feImage\",\n    \"feMerge\",\n    \"feMergeNode\",\n    \"feMorphology\",\n    \"feOffset\",\n    \"fePointLight\",\n    \"feSpecularLighting\",\n    \"feSpotLight\",\n    \"feTile\",\n    \"feTurbulence\",\n    \"foreignObject\",\n    \"glyphRef\",\n    \"linearGradient\",\n    \"radialGradient\",\n    \"textPath\",\n].map((val) => [val.toLowerCase(), val]));\nexport const attributeNames = new Map([\n    \"definitionURL\",\n    \"attributeName\",\n    \"attributeType\",\n    \"baseFrequency\",\n    \"baseProfile\",\n    \"calcMode\",\n    \"clipPathUnits\",\n    \"diffuseConstant\",\n    \"edgeMode\",\n    \"filterUnits\",\n    \"glyphRef\",\n    \"gradientTransform\",\n    \"gradientUnits\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keyPoints\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"lengthAdjust\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerUnits\",\n    \"markerWidth\",\n    \"maskContentUnits\",\n    \"maskUnits\",\n    \"numOctaves\",\n    \"pathLength\",\n    \"patternContentUnits\",\n    \"patternTransform\",\n    \"patternUnits\",\n    \"pointsAtX\",\n    \"pointsAtY\",\n    \"pointsAtZ\",\n    \"preserveAlpha\",\n    \"preserveAspectRatio\",\n    \"primitiveUnits\",\n    \"refX\",\n    \"refY\",\n    \"repeatCount\",\n    \"repeatDur\",\n    \"requiredExtensions\",\n    \"requiredFeatures\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"spreadMethod\",\n    \"startOffset\",\n    \"stdDeviation\",\n    \"stitchTiles\",\n    \"surfaceScale\",\n    \"systemLanguage\",\n    \"tableValues\",\n    \"targetX\",\n    \"targetY\",\n    \"textLength\",\n    \"viewBox\",\n    \"viewTarget\",\n    \"xChannelSelector\",\n    \"yChannelSelector\",\n    \"zoomAndPan\",\n].map((val) => [val.toLowerCase(), val]));\n", "/*\n * Module dependencies\n */\nimport * as ElementType from \"domelementtype\";\nimport { encodeXML, escapeAttribute, escapeText } from \"entities\";\n/**\n * Mixed-case SVG and MathML tags & attributes\n * recognized by the HTML parser.\n *\n * @see https://html.spec.whatwg.org/multipage/parsing.html#parsing-main-inforeign\n */\nimport { elementNames, attributeNames } from \"./foreignNames.js\";\nconst unencodedElements = new Set([\n    \"style\",\n    \"script\",\n    \"xmp\",\n    \"iframe\",\n    \"noembed\",\n    \"noframes\",\n    \"plaintext\",\n    \"noscript\",\n]);\nfunction replaceQuotes(value) {\n    return value.replace(/\"/g, \"&quot;\");\n}\n/**\n * Format attributes\n */\nfunction formatAttributes(attributes, opts) {\n    var _a;\n    if (!attributes)\n        return;\n    const encode = ((_a = opts.encodeEntities) !== null && _a !== void 0 ? _a : opts.decodeEntities) === false\n        ? replaceQuotes\n        : opts.xmlMode || opts.encodeEntities !== \"utf8\"\n            ? encodeXML\n            : escapeAttribute;\n    return Object.keys(attributes)\n        .map((key) => {\n        var _a, _b;\n        const value = (_a = attributes[key]) !== null && _a !== void 0 ? _a : \"\";\n        if (opts.xmlMode === \"foreign\") {\n            /* Fix up mixed-case attribute names */\n            key = (_b = attributeNames.get(key)) !== null && _b !== void 0 ? _b : key;\n        }\n        if (!opts.emptyAttrs && !opts.xmlMode && value === \"\") {\n            return key;\n        }\n        return `${key}=\"${encode(value)}\"`;\n    })\n        .join(\" \");\n}\n/**\n * Self-enclosing tags\n */\nconst singleTag = new Set([\n    \"area\",\n    \"base\",\n    \"basefont\",\n    \"br\",\n    \"col\",\n    \"command\",\n    \"embed\",\n    \"frame\",\n    \"hr\",\n    \"img\",\n    \"input\",\n    \"isindex\",\n    \"keygen\",\n    \"link\",\n    \"meta\",\n    \"param\",\n    \"source\",\n    \"track\",\n    \"wbr\",\n]);\n/**\n * Renders a DOM node or an array of DOM nodes to a string.\n *\n * Can be thought of as the equivalent of the `outerHTML` of the passed node(s).\n *\n * @param node Node to be rendered.\n * @param options Changes serialization behavior\n */\nexport function render(node, options = {}) {\n    const nodes = \"length\" in node ? node : [node];\n    let output = \"\";\n    for (let i = 0; i < nodes.length; i++) {\n        output += renderNode(nodes[i], options);\n    }\n    return output;\n}\nexport default render;\nfunction renderNode(node, options) {\n    switch (node.type) {\n        case ElementType.Root:\n            return render(node.children, options);\n        // @ts-expect-error We don't use `Doctype` yet\n        case ElementType.Doctype:\n        case ElementType.Directive:\n            return renderDirective(node);\n        case ElementType.Comment:\n            return renderComment(node);\n        case ElementType.CDATA:\n            return renderCdata(node);\n        case ElementType.Script:\n        case ElementType.Style:\n        case ElementType.Tag:\n            return renderTag(node, options);\n        case ElementType.Text:\n            return renderText(node, options);\n    }\n}\nconst foreignModeIntegrationPoints = new Set([\n    \"mi\",\n    \"mo\",\n    \"mn\",\n    \"ms\",\n    \"mtext\",\n    \"annotation-xml\",\n    \"foreignObject\",\n    \"desc\",\n    \"title\",\n]);\nconst foreignElements = new Set([\"svg\", \"math\"]);\nfunction renderTag(elem, opts) {\n    var _a;\n    // Handle SVG / MathML in HTML\n    if (opts.xmlMode === \"foreign\") {\n        /* Fix up mixed-case element names */\n        elem.name = (_a = elementNames.get(elem.name)) !== null && _a !== void 0 ? _a : elem.name;\n        /* Exit foreign mode at integration points */\n        if (elem.parent &&\n            foreignModeIntegrationPoints.has(elem.parent.name)) {\n            opts = { ...opts, xmlMode: false };\n        }\n    }\n    if (!opts.xmlMode && foreignElements.has(elem.name)) {\n        opts = { ...opts, xmlMode: \"foreign\" };\n    }\n    let tag = `<${elem.name}`;\n    const attribs = formatAttributes(elem.attribs, opts);\n    if (attribs) {\n        tag += ` ${attribs}`;\n    }\n    if (elem.children.length === 0 &&\n        (opts.xmlMode\n            ? // In XML mode or foreign mode, and user hasn't explicitly turned off self-closing tags\n                opts.selfClosingTags !== false\n            : // User explicitly asked for self-closing tags, even in HTML mode\n                opts.selfClosingTags && singleTag.has(elem.name))) {\n        if (!opts.xmlMode)\n            tag += \" \";\n        tag += \"/>\";\n    }\n    else {\n        tag += \">\";\n        if (elem.children.length > 0) {\n            tag += render(elem.children, opts);\n        }\n        if (opts.xmlMode || !singleTag.has(elem.name)) {\n            tag += `</${elem.name}>`;\n        }\n    }\n    return tag;\n}\nfunction renderDirective(elem) {\n    return `<${elem.data}>`;\n}\nfunction renderText(elem, opts) {\n    var _a;\n    let data = elem.data || \"\";\n    // If entities weren't decoded, no need to encode them back\n    if (((_a = opts.encodeEntities) !== null && _a !== void 0 ? _a : opts.decodeEntities) !== false &&\n        !(!opts.xmlMode &&\n            elem.parent &&\n            unencodedElements.has(elem.parent.name))) {\n        data =\n            opts.xmlMode || opts.encodeEntities !== \"utf8\"\n                ? encodeXML(data)\n                : escapeText(data);\n    }\n    return data;\n}\nfunction renderCdata(elem) {\n    return `<![CDATA[${elem.children[0].data}]]>`;\n}\nfunction renderComment(elem) {\n    return `<!--${elem.data}-->`;\n}\n", null, null, null, null, null, null, null, null, null, null, null, "export var SelectorType;\n(function (SelectorType) {\n    SelectorType[\"Attribute\"] = \"attribute\";\n    SelectorType[\"Pseudo\"] = \"pseudo\";\n    SelectorType[\"PseudoElement\"] = \"pseudo-element\";\n    SelectorType[\"Tag\"] = \"tag\";\n    SelectorType[\"Universal\"] = \"universal\";\n    // Traversals\n    SelectorType[\"Adjacent\"] = \"adjacent\";\n    SelectorType[\"Child\"] = \"child\";\n    SelectorType[\"Descendant\"] = \"descendant\";\n    SelectorType[\"Parent\"] = \"parent\";\n    SelectorType[\"Sibling\"] = \"sibling\";\n    SelectorType[\"ColumnCombinator\"] = \"column-combinator\";\n})(SelectorType || (SelectorType = {}));\n/**\n * Modes for ignore case.\n *\n * This could be updated to an enum, and the object is\n * the current stand-in that will allow code to be updated\n * without big changes.\n */\nexport const IgnoreCaseMode = {\n    Unknown: null,\n    QuirksMode: \"quirks\",\n    IgnoreCase: true,\n    CaseSensitive: false,\n};\nexport var AttributeAction;\n(function (AttributeAction) {\n    AttributeAction[\"Any\"] = \"any\";\n    AttributeAction[\"Element\"] = \"element\";\n    AttributeAction[\"End\"] = \"end\";\n    AttributeAction[\"Equals\"] = \"equals\";\n    AttributeAction[\"Exists\"] = \"exists\";\n    AttributeAction[\"Hyphen\"] = \"hyphen\";\n    AttributeAction[\"Not\"] = \"not\";\n    AttributeAction[\"Start\"] = \"start\";\n})(AttributeAction || (AttributeAction = {}));\n", "import { SelectorType, AttributeAction, } from \"./types\";\nconst reName = /^[^\\\\#]?(?:\\\\(?:[\\da-f]{1,6}\\s?|.)|[\\w\\-\\u00b0-\\uFFFF])+/;\nconst reEscape = /\\\\([\\da-f]{1,6}\\s?|(\\s)|.)/gi;\nconst actionTypes = new Map([\n    [126 /* Tilde */, AttributeAction.Element],\n    [94 /* Circumflex */, AttributeAction.Start],\n    [36 /* Dollar */, AttributeAction.End],\n    [42 /* Asterisk */, AttributeAction.Any],\n    [33 /* ExclamationMark */, AttributeAction.Not],\n    [124 /* Pipe */, AttributeAction.Hyphen],\n]);\n// Pseudos, whose data property is parsed as well.\nconst unpackPseudos = new Set([\n    \"has\",\n    \"not\",\n    \"matches\",\n    \"is\",\n    \"where\",\n    \"host\",\n    \"host-context\",\n]);\n/**\n * Checks whether a specific selector is a traversal.\n * This is useful eg. in swapping the order of elements that\n * are not traversals.\n *\n * @param selector Selector to check.\n */\nexport function isTraversal(selector) {\n    switch (selector.type) {\n        case SelectorType.Adjacent:\n        case SelectorType.Child:\n        case SelectorType.Descendant:\n        case SelectorType.Parent:\n        case SelectorType.Sibling:\n        case SelectorType.ColumnCombinator:\n            return true;\n        default:\n            return false;\n    }\n}\nconst stripQuotesFromPseudos = new Set([\"contains\", \"icontains\"]);\n// Unescape function taken from https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L152\nfunction funescape(_, escaped, escapedWhitespace) {\n    const high = parseInt(escaped, 16) - 0x10000;\n    // NaN means non-codepoint\n    return high !== high || escapedWhitespace\n        ? escaped\n        : high < 0\n            ? // BMP codepoint\n                String.fromCharCode(high + 0x10000)\n            : // Supplemental Plane codepoint (surrogate pair)\n                String.fromCharCode((high >> 10) | 0xd800, (high & 0x3ff) | 0xdc00);\n}\nfunction unescapeCSS(str) {\n    return str.replace(reEscape, funescape);\n}\nfunction isQuote(c) {\n    return c === 39 /* SingleQuote */ || c === 34 /* DoubleQuote */;\n}\nfunction isWhitespace(c) {\n    return (c === 32 /* Space */ ||\n        c === 9 /* Tab */ ||\n        c === 10 /* NewLine */ ||\n        c === 12 /* FormFeed */ ||\n        c === 13 /* CarriageReturn */);\n}\n/**\n * Parses `selector`, optionally with the passed `options`.\n *\n * @param selector Selector to parse.\n * @param options Options for parsing.\n * @returns Returns a two-dimensional array.\n * The first dimension represents selectors separated by commas (eg. `sub1, sub2`),\n * the second contains the relevant tokens for that selector.\n */\nexport function parse(selector) {\n    const subselects = [];\n    const endIndex = parseSelector(subselects, `${selector}`, 0);\n    if (endIndex < selector.length) {\n        throw new Error(`Unmatched selector: ${selector.slice(endIndex)}`);\n    }\n    return subselects;\n}\nfunction parseSelector(subselects, selector, selectorIndex) {\n    let tokens = [];\n    function getName(offset) {\n        const match = selector.slice(selectorIndex + offset).match(reName);\n        if (!match) {\n            throw new Error(`Expected name, found ${selector.slice(selectorIndex)}`);\n        }\n        const [name] = match;\n        selectorIndex += offset + name.length;\n        return unescapeCSS(name);\n    }\n    function stripWhitespace(offset) {\n        selectorIndex += offset;\n        while (selectorIndex < selector.length &&\n            isWhitespace(selector.charCodeAt(selectorIndex))) {\n            selectorIndex++;\n        }\n    }\n    function readValueWithParenthesis() {\n        selectorIndex += 1;\n        const start = selectorIndex;\n        let counter = 1;\n        for (; counter > 0 && selectorIndex < selector.length; selectorIndex++) {\n            if (selector.charCodeAt(selectorIndex) ===\n                40 /* LeftParenthesis */ &&\n                !isEscaped(selectorIndex)) {\n                counter++;\n            }\n            else if (selector.charCodeAt(selectorIndex) ===\n                41 /* RightParenthesis */ &&\n                !isEscaped(selectorIndex)) {\n                counter--;\n            }\n        }\n        if (counter) {\n            throw new Error(\"Parenthesis not matched\");\n        }\n        return unescapeCSS(selector.slice(start, selectorIndex - 1));\n    }\n    function isEscaped(pos) {\n        let slashCount = 0;\n        while (selector.charCodeAt(--pos) === 92 /* BackSlash */)\n            slashCount++;\n        return (slashCount & 1) === 1;\n    }\n    function ensureNotTraversal() {\n        if (tokens.length > 0 && isTraversal(tokens[tokens.length - 1])) {\n            throw new Error(\"Did not expect successive traversals.\");\n        }\n    }\n    function addTraversal(type) {\n        if (tokens.length > 0 &&\n            tokens[tokens.length - 1].type === SelectorType.Descendant) {\n            tokens[tokens.length - 1].type = type;\n            return;\n        }\n        ensureNotTraversal();\n        tokens.push({ type });\n    }\n    function addSpecialAttribute(name, action) {\n        tokens.push({\n            type: SelectorType.Attribute,\n            name,\n            action,\n            value: getName(1),\n            namespace: null,\n            ignoreCase: \"quirks\",\n        });\n    }\n    /**\n     * We have finished parsing the current part of the selector.\n     *\n     * Remove descendant tokens at the end if they exist,\n     * and return the last index, so that parsing can be\n     * picked up from here.\n     */\n    function finalizeSubselector() {\n        if (tokens.length &&\n            tokens[tokens.length - 1].type === SelectorType.Descendant) {\n            tokens.pop();\n        }\n        if (tokens.length === 0) {\n            throw new Error(\"Empty sub-selector\");\n        }\n        subselects.push(tokens);\n    }\n    stripWhitespace(0);\n    if (selector.length === selectorIndex) {\n        return selectorIndex;\n    }\n    loop: while (selectorIndex < selector.length) {\n        const firstChar = selector.charCodeAt(selectorIndex);\n        switch (firstChar) {\n            // Whitespace\n            case 32 /* Space */:\n            case 9 /* Tab */:\n            case 10 /* NewLine */:\n            case 12 /* FormFeed */:\n            case 13 /* CarriageReturn */: {\n                if (tokens.length === 0 ||\n                    tokens[0].type !== SelectorType.Descendant) {\n                    ensureNotTraversal();\n                    tokens.push({ type: SelectorType.Descendant });\n                }\n                stripWhitespace(1);\n                break;\n            }\n            // Traversals\n            case 62 /* GreaterThan */: {\n                addTraversal(SelectorType.Child);\n                stripWhitespace(1);\n                break;\n            }\n            case 60 /* LessThan */: {\n                addTraversal(SelectorType.Parent);\n                stripWhitespace(1);\n                break;\n            }\n            case 126 /* Tilde */: {\n                addTraversal(SelectorType.Sibling);\n                stripWhitespace(1);\n                break;\n            }\n            case 43 /* Plus */: {\n                addTraversal(SelectorType.Adjacent);\n                stripWhitespace(1);\n                break;\n            }\n            // Special attribute selectors: .class, #id\n            case 46 /* Period */: {\n                addSpecialAttribute(\"class\", AttributeAction.Element);\n                break;\n            }\n            case 35 /* Hash */: {\n                addSpecialAttribute(\"id\", AttributeAction.Equals);\n                break;\n            }\n            case 91 /* LeftSquareBracket */: {\n                stripWhitespace(1);\n                // Determine attribute name and namespace\n                let name;\n                let namespace = null;\n                if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */) {\n                    // Equivalent to no namespace\n                    name = getName(1);\n                }\n                else if (selector.startsWith(\"*|\", selectorIndex)) {\n                    namespace = \"*\";\n                    name = getName(2);\n                }\n                else {\n                    name = getName(0);\n                    if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */ &&\n                        selector.charCodeAt(selectorIndex + 1) !==\n                            61 /* Equal */) {\n                        namespace = name;\n                        name = getName(1);\n                    }\n                }\n                stripWhitespace(0);\n                // Determine comparison operation\n                let action = AttributeAction.Exists;\n                const possibleAction = actionTypes.get(selector.charCodeAt(selectorIndex));\n                if (possibleAction) {\n                    action = possibleAction;\n                    if (selector.charCodeAt(selectorIndex + 1) !==\n                        61 /* Equal */) {\n                        throw new Error(\"Expected `=`\");\n                    }\n                    stripWhitespace(2);\n                }\n                else if (selector.charCodeAt(selectorIndex) === 61 /* Equal */) {\n                    action = AttributeAction.Equals;\n                    stripWhitespace(1);\n                }\n                // Determine value\n                let value = \"\";\n                let ignoreCase = null;\n                if (action !== \"exists\") {\n                    if (isQuote(selector.charCodeAt(selectorIndex))) {\n                        const quote = selector.charCodeAt(selectorIndex);\n                        let sectionEnd = selectorIndex + 1;\n                        while (sectionEnd < selector.length &&\n                            (selector.charCodeAt(sectionEnd) !== quote ||\n                                isEscaped(sectionEnd))) {\n                            sectionEnd += 1;\n                        }\n                        if (selector.charCodeAt(sectionEnd) !== quote) {\n                            throw new Error(\"Attribute value didn't end\");\n                        }\n                        value = unescapeCSS(selector.slice(selectorIndex + 1, sectionEnd));\n                        selectorIndex = sectionEnd + 1;\n                    }\n                    else {\n                        const valueStart = selectorIndex;\n                        while (selectorIndex < selector.length &&\n                            ((!isWhitespace(selector.charCodeAt(selectorIndex)) &&\n                                selector.charCodeAt(selectorIndex) !==\n                                    93 /* RightSquareBracket */) ||\n                                isEscaped(selectorIndex))) {\n                            selectorIndex += 1;\n                        }\n                        value = unescapeCSS(selector.slice(valueStart, selectorIndex));\n                    }\n                    stripWhitespace(0);\n                    // See if we have a force ignore flag\n                    const forceIgnore = selector.charCodeAt(selectorIndex) | 0x20;\n                    // If the forceIgnore flag is set (either `i` or `s`), use that value\n                    if (forceIgnore === 115 /* LowerS */) {\n                        ignoreCase = false;\n                        stripWhitespace(1);\n                    }\n                    else if (forceIgnore === 105 /* LowerI */) {\n                        ignoreCase = true;\n                        stripWhitespace(1);\n                    }\n                }\n                if (selector.charCodeAt(selectorIndex) !==\n                    93 /* RightSquareBracket */) {\n                    throw new Error(\"Attribute selector didn't terminate\");\n                }\n                selectorIndex += 1;\n                const attributeSelector = {\n                    type: SelectorType.Attribute,\n                    name,\n                    action,\n                    value,\n                    namespace,\n                    ignoreCase,\n                };\n                tokens.push(attributeSelector);\n                break;\n            }\n            case 58 /* Colon */: {\n                if (selector.charCodeAt(selectorIndex + 1) === 58 /* Colon */) {\n                    tokens.push({\n                        type: SelectorType.PseudoElement,\n                        name: getName(2).toLowerCase(),\n                        data: selector.charCodeAt(selectorIndex) ===\n                            40 /* LeftParenthesis */\n                            ? readValueWithParenthesis()\n                            : null,\n                    });\n                    continue;\n                }\n                const name = getName(1).toLowerCase();\n                let data = null;\n                if (selector.charCodeAt(selectorIndex) ===\n                    40 /* LeftParenthesis */) {\n                    if (unpackPseudos.has(name)) {\n                        if (isQuote(selector.charCodeAt(selectorIndex + 1))) {\n                            throw new Error(`Pseudo-selector ${name} cannot be quoted`);\n                        }\n                        data = [];\n                        selectorIndex = parseSelector(data, selector, selectorIndex + 1);\n                        if (selector.charCodeAt(selectorIndex) !==\n                            41 /* RightParenthesis */) {\n                            throw new Error(`Missing closing parenthesis in :${name} (${selector})`);\n                        }\n                        selectorIndex += 1;\n                    }\n                    else {\n                        data = readValueWithParenthesis();\n                        if (stripQuotesFromPseudos.has(name)) {\n                            const quot = data.charCodeAt(0);\n                            if (quot === data.charCodeAt(data.length - 1) &&\n                                isQuote(quot)) {\n                                data = data.slice(1, -1);\n                            }\n                        }\n                        data = unescapeCSS(data);\n                    }\n                }\n                tokens.push({ type: SelectorType.Pseudo, name, data });\n                break;\n            }\n            case 44 /* Comma */: {\n                finalizeSubselector();\n                tokens = [];\n                stripWhitespace(1);\n                break;\n            }\n            default: {\n                if (selector.startsWith(\"/*\", selectorIndex)) {\n                    const endIndex = selector.indexOf(\"*/\", selectorIndex + 2);\n                    if (endIndex < 0) {\n                        throw new Error(\"Comment was not terminated\");\n                    }\n                    selectorIndex = endIndex + 2;\n                    // Remove leading whitespace\n                    if (tokens.length === 0) {\n                        stripWhitespace(0);\n                    }\n                    break;\n                }\n                let namespace = null;\n                let name;\n                if (firstChar === 42 /* Asterisk */) {\n                    selectorIndex += 1;\n                    name = \"*\";\n                }\n                else if (firstChar === 124 /* Pipe */) {\n                    name = \"\";\n                    if (selector.charCodeAt(selectorIndex + 1) === 124 /* Pipe */) {\n                        addTraversal(SelectorType.ColumnCombinator);\n                        stripWhitespace(2);\n                        break;\n                    }\n                }\n                else if (reName.test(selector.slice(selectorIndex))) {\n                    name = getName(0);\n                }\n                else {\n                    break loop;\n                }\n                if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */ &&\n                    selector.charCodeAt(selectorIndex + 1) !== 124 /* Pipe */) {\n                    namespace = name;\n                    if (selector.charCodeAt(selectorIndex + 1) ===\n                        42 /* Asterisk */) {\n                        name = \"*\";\n                        selectorIndex += 2;\n                    }\n                    else {\n                        name = getName(1);\n                    }\n                }\n                tokens.push(name === \"*\"\n                    ? { type: SelectorType.Universal, namespace }\n                    : { type: SelectorType.Tag, name, namespace });\n            }\n        }\n    }\n    finalizeSubselector();\n    return selectorIndex;\n}\n", "export * from \"./types\";\nexport { isTraversal, parse } from \"./parse\";\nexport { stringify } from \"./stringify\";\n", "module.exports = {\n\ttrueFunc: function trueFunc(){\n\t\treturn true;\n\t},\n\tfalseFunc: function falseFunc(){\n\t\treturn false;\n\t}\n};", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "const UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"NUMBER_SIGN\"] = 35] = \"NUMBER_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_F\"] = 70] = \"LATIN_CAPITAL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_X\"] = 88] = \"LATIN_CAPITAL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_F\"] = 102] = \"LATIN_SMALL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_X\"] = 120] = \"LATIN_SMALL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n    CODE_POINTS[CODE_POINTS[\"REPLACEMENT_CHARACTER\"] = 65533] = \"REPLACEMENT_CHARACTER\";\n})(CODE_POINTS = CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nexport function isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nexport function isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n//# sourceMappingURL=unicode.js.map", "export var ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR = ERR || (ERR = {}));\n//# sourceMappingURL=error-codes.js.map", "import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code) {\n        const { line, col, offset } = this;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol: col,\n            endCol: col,\n            startOffset: offset,\n            endOffset: offset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === $.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === $.LINE_FEED ||\n            cp === $.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n//# sourceMappingURL=preprocessor.js.map", "export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType = TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=token.js.map", "/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS = NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS = ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE = DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES = TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 94] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 95] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 96] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 97] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 98] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 99] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 100] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 101] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 102] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 103] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 104] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 105] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 106] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 107] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 108] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 109] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 110] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 111] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 112] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 113] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 114] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 115] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 116] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 117] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 118] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 119] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 120] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 121] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 122] = \"XMP\";\n})(TAG_ID = TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport function isNumberedHeader(tn) {\n    return tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6;\n}\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n//# sourceMappingURL=html.js.map", "import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, BinTrieFlags, determineBranch } from 'entities/lib/decode.js';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//C1 Unicode control character reference replacements\nconst C1_CONTROLS_REFERENCE_REPLACEMENTS = new Map([\n    [0x80, 8364],\n    [0x82, 8218],\n    [0x83, 402],\n    [0x84, 8222],\n    [0x85, 8230],\n    [0x86, 8224],\n    [0x87, 8225],\n    [0x88, 710],\n    [0x89, 8240],\n    [0x8a, 352],\n    [0x8b, 8249],\n    [0x8c, 338],\n    [0x8e, 381],\n    [0x91, 8216],\n    [0x92, 8217],\n    [0x93, 8220],\n    [0x94, 8221],\n    [0x95, 8226],\n    [0x96, 8211],\n    [0x97, 8212],\n    [0x98, 732],\n    [0x99, 8482],\n    [0x9a, 353],\n    [0x9b, 8250],\n    [0x9c, 339],\n    [0x9e, 382],\n    [0x9f, 376],\n]);\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"NAMED_CHARACTER_REFERENCE\"] = 72] = \"NAMED_CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 73] = \"AMBIGUOUS_AMPERSAND\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE\"] = 74] = \"NUMERIC_CHARACTER_REFERENCE\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE_START\"] = 75] = \"HEXADEMICAL_CHARACTER_REFERENCE_START\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE\"] = 76] = \"HEXADEMICAL_CHARACTER_REFERENCE\";\n    State[State[\"DECIMAL_CHARACTER_REFERENCE\"] = 77] = \"DECIMAL_CHARACTER_REFERENCE\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE_END\"] = 78] = \"NUMERIC_CHARACTER_REFERENCE_END\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction isAsciiUpperHexDigit(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F;\n}\nfunction isAsciiLowerHexDigit(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F;\n}\nfunction isAsciiHexDigit(cp) {\n    return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isEntityInAttributeInvalidEnd(nextCp) {\n    return nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp);\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.charRefCode = -1;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    //Errors\n    _err(code) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this._unconsume(this.consumedAfterSnapshot);\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _unconsume(count) {\n        this.consumedAfterSnapshot -= count;\n        this.preprocessor.retreat(count);\n    }\n    _reconsumeInState(state, cp) {\n        this.state = state;\n        this._callState(cp);\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: specification uses only one type of character tokens (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type !== type) {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n            else {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === $.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _matchNamedCharacterReference(cp) {\n        let result = null;\n        let excess = 0;\n        let withoutSemicolon = false;\n        for (let i = 0, current = htmlDecodeTree[0]; i >= 0; cp = this._consume()) {\n            i = determineBranch(htmlDecodeTree, current, i + 1, cp);\n            if (i < 0)\n                break;\n            excess += 1;\n            current = htmlDecodeTree[i];\n            const masked = current & BinTrieFlags.VALUE_LENGTH;\n            // If the branch is a value, store it and continue\n            if (masked) {\n                // The mask is the number of bytes of the value, including the current byte.\n                const valueLength = (masked >> 14) - 1;\n                // Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n                // See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n                if (cp !== $.SEMICOLON &&\n                    this._isCharacterReferenceInAttribute() &&\n                    isEntityInAttributeInvalidEnd(this.preprocessor.peek(1))) {\n                    //NOTE: we don't flush all consumed code points here, and instead switch back to the original state after\n                    //emitting an ampersand. This is fine, as alphanumeric characters won't be parsed differently in attributes.\n                    result = [$.AMPERSAND];\n                    // Skip over the value.\n                    i += valueLength;\n                }\n                else {\n                    // If this is a surrogate pair, consume the next two bytes.\n                    result =\n                        valueLength === 0\n                            ? [htmlDecodeTree[i] & ~BinTrieFlags.VALUE_LENGTH]\n                            : valueLength === 1\n                                ? [htmlDecodeTree[++i]]\n                                : [htmlDecodeTree[++i], htmlDecodeTree[++i]];\n                    excess = 0;\n                    withoutSemicolon = cp !== $.SEMICOLON;\n                }\n                if (valueLength === 0) {\n                    // If the value is zero-length, we're done.\n                    this._consume();\n                    break;\n                }\n            }\n        }\n        this._unconsume(excess);\n        if (withoutSemicolon && !this.preprocessor.endOfChunkHit) {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n        }\n        // We want to emit the error above on the code point after the entity.\n        // We always consume one code point too many in the loop, and we wait to\n        // unconsume it until after the error is emitted.\n        this._unconsume(1);\n        return result;\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference(cp);\n                break;\n            }\n            case State.NAMED_CHARACTER_REFERENCE: {\n                this._stateNamedCharacterReference(cp);\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE: {\n                this._stateNumericCharacterReference(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE_START: {\n                this._stateHexademicalCharacterReferenceStart(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE: {\n                this._stateHexademicalCharacterReference(cp);\n                break;\n            }\n            case State.DECIMAL_CHARACTER_REFERENCE: {\n                this._stateDecimalCharacterReference(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE_END: {\n                this._stateNumericCharacterReferenceEnd(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.DATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this.returnState = State.RCDATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference(cp) {\n        if (cp === $.NUMBER_SIGN) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE;\n        }\n        else if (isAsciiAlphaNumeric(cp)) {\n            this.state = State.NAMED_CHARACTER_REFERENCE;\n            this._stateNamedCharacterReference(cp);\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Named character reference state\n    //------------------------------------------------------------------\n    _stateNamedCharacterReference(cp) {\n        const matchResult = this._matchNamedCharacterReference(cp);\n        //NOTE: Matching can be abrupted by hibernation. In that case, match\n        //results are no longer valid and we will need to start over.\n        if (this._ensureHibernation()) {\n            // Stay in the state, try again.\n        }\n        else if (matchResult) {\n            for (let i = 0; i < matchResult.length; i++) {\n                this._flushCodePointConsumedAsCharacterReference(matchResult[i]);\n            }\n            this.state = this.returnState;\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state = State.AMBIGUOUS_AMPERSAND;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Numeric character reference state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReference(cp) {\n        this.charRefCode = 0;\n        if (cp === $.LATIN_SMALL_X || cp === $.LATIN_CAPITAL_X) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE_START;\n        }\n        // Inlined decimal character reference start state\n        else if (isAsciiDigit(cp)) {\n            this.state = State.DECIMAL_CHARACTER_REFERENCE;\n            this._stateDecimalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Hexademical character reference start state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReferenceStart(cp) {\n        if (isAsciiHexDigit(cp)) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE;\n            this._stateHexademicalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._unconsume(2);\n            this.state = this.returnState;\n        }\n    }\n    // Hexademical character reference state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReference(cp) {\n        if (isAsciiUpperHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x37;\n        }\n        else if (isAsciiLowerHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x57;\n        }\n        else if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Decimal character reference state\n    //------------------------------------------------------------------\n    _stateDecimalCharacterReference(cp) {\n        if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 10 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Numeric character reference end state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReferenceEnd(cp) {\n        if (this.charRefCode === $.NULL) {\n            this._err(ERR.nullCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (this.charRefCode > 1114111) {\n            this._err(ERR.characterReferenceOutsideUnicodeRange);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isSurrogate(this.charRefCode)) {\n            this._err(ERR.surrogateCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isUndefinedCodePoint(this.charRefCode)) {\n            this._err(ERR.noncharacterCharacterReference);\n        }\n        else if (isControlCodePoint(this.charRefCode) || this.charRefCode === $.CARRIAGE_RETURN) {\n            this._err(ERR.controlCharacterReference);\n            const replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS.get(this.charRefCode);\n            if (replacement !== undefined) {\n                this.charRefCode = replacement;\n            }\n        }\n        this._flushCodePointConsumedAsCharacterReference(this.charRefCode);\n        this._reconsumeInState(this.returnState, cp);\n    }\n}\n//# sourceMappingURL=index.js.map", "import { TAG_ID as $, NS, isNumberedHeader } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENT_NS = new Map([\n    [$.APPLET, NS.HTML],\n    [$.CAPTION, NS.HTML],\n    [$.HTML, NS.HTML],\n    [$.MARQUEE, NS.HTML],\n    [$.OBJECT, NS.HTML],\n    [$.TABLE, NS.HTML],\n    [$.TD, NS.HTML],\n    [$.TEMPLATE, NS.HTML],\n    [$.TH, NS.HTML],\n    [$.ANNOTATION_XML, NS.MATHML],\n    [$.MI, NS.MATHML],\n    [$.MN, NS.MATHML],\n    [$.MO, NS.MATHML],\n    [$.MS, NS.MATHML],\n    [$.MTEXT, NS.MATHML],\n    [$.DESC, NS.SVG],\n    [$.FOREIGN_OBJECT, NS.SVG],\n    [$.TITLE, NS.SVG],\n]);\nconst NAMED_HEADERS = [$.H1, $.H2, $.H3, $.H4, $.H5, $.H6];\nconst TABLE_ROW_CONTEXT = [$.TR, $.TEMPLATE, $.HTML];\nconst TABLE_BODY_CONTEXT = [$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML];\nconst TABLE_CONTEXT = [$.TABLE, $.TEMPLATE, $.HTML];\nconst TABLE_CELLS = [$.TD, $.TH];\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NAMED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.includes(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (isNumberedHeader(tn) && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInListItemScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInButtonScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if ((tn === $.BUTTON && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n                return false;\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n//# sourceMappingURL=open-element-stack.js.map", "//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType = EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex >= 0) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx >= 0) {\n            this.entries.splice(0, markerIdx + 1);\n        }\n        else {\n            this.entries.length = 0;\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n//# sourceMappingURL=formatting-element-list.js.map", "import { DOCUMENT_MODE } from '../common/html.js';\nfunction createTextNode(value) {\n    return {\n        nodeName: '#text',\n        value,\n        parentNode: null,\n    };\n}\nexport const defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n//# sourceMappingURL=default.js.map", "import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nexport function getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n//# sourceMappingURL=doctype.js.map", "import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:base', { prefix: 'xml', name: 'base', namespace: NS.XML }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n//# sourceMappingURL=foreign-content.js.map", "import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, isNumberedHeader, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, fragmentContext = null, scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        this.insertionMode = InsertionMode.INITIAL;\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        this.headElement = null;\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         */\n        this.tmplInsertionModeStack = [];\n        this.pendingCharacterTokens = [];\n        this.hasNonWhitespacePendingCharacterToken = false;\n        this.framesetOk = true;\n        this.skipNextNewLine = false;\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (isNumberedHeader(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\n//<noembed> as rawtext.\nfunction noembedStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED: {\n            noembedStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                noembedStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n//# sourceMappingURL=index.js.map", "import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\nimport { escapeText, escapeAttribute } from 'entities/lib/escape.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\n// Sets\nconst VOID_ELEMENTS = new Set([\n    $.AREA,\n    $.BASE,\n    $.BASEFONT,\n    $.BGSOUND,\n    $.BR,\n    $.COL,\n    $.EMBED,\n    $.FRAME,\n    $.HR,\n    $.IMG,\n    $.INPUT,\n    $.KEYGEN,\n    $.LINK,\n    $.META,\n    $.PARAM,\n    $.SOURCE,\n    $.TRACK,\n    $.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serialize(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const html = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serializeOuter(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (!attr.namespace) {\n            html += attr.name;\n        }\n        else\n            switch (attr.namespace) {\n                case NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        html += `=\"${escapeAttribute(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\n        hasUnescapedText(parentTn, options.scriptingEnabled)\n        ? content\n        : escapeText(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n//# sourceMappingURL=index.js.map", "import { Parser } from './parser/index.js';\nexport { defaultTreeAdapter } from './tree-adapters/default.js';\nexport { /** @internal */ Parser } from './parser/index.js';\nexport { serialize, serializeOuter } from './serializer/index.js';\nexport { ERR as ErrorCodes } from './common/error-codes.js';\n/** @internal */\nexport * as foreignContent from './common/foreign-content.js';\n/** @internal */\nexport * as html from './common/html.js';\n/** @internal */\nexport * as Token from './common/token.js';\n/** @internal */\nexport { Tokenizer, TokenizerMode } from './tokenizer/index.js';\n// Shorthands\n/**\n * Parses an HTML string.\n *\n * @param html Input HTML string.\n * @param options Parsing options.\n * @returns Document\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * console.log(document.childNodes[1].tagName); //> 'html'\n *```\n */\nexport function parse(html, options) {\n    return Parser.parse(html, options);\n}\nexport function parseFragment(fragmentContext, html, options) {\n    if (typeof fragmentContext === 'string') {\n        options = html;\n        html = fragmentContext;\n        fragmentContext = null;\n    }\n    const parser = Parser.getFragmentParser(fragmentContext, options);\n    parser.tokenizer.write(html, true);\n    return parser.getFragment();\n}\n//# sourceMappingURL=index.js.map", "import { html } from 'parse5';\nimport { Element, Document, ProcessingInstruction, Comment, Text, isDirective, isText, isComment, isTag, } from 'domhandler';\nfunction createTextNode(value) {\n    return new Text(value);\n}\nfunction enquoteDoctypeId(id) {\n    const quote = id.includes('\"') ? \"'\" : '\"';\n    return quote + id + quote;\n}\n/** @internal */\nexport function serializeDoctypeContent(name, publicId, systemId) {\n    let str = '!DOCTYPE ';\n    if (name) {\n        str += name;\n    }\n    if (publicId) {\n        str += ` PUBLIC ${enquoteDoctypeId(publicId)}`;\n    }\n    else if (systemId) {\n        str += ' SYSTEM';\n    }\n    if (systemId) {\n        str += ` ${enquoteDoctypeId(systemId)}`;\n    }\n    return str;\n}\nexport const adapter = {\n    // Re-exports from domhandler\n    isCommentNode: isComment,\n    isElementNode: isTag,\n    isTextNode: isText,\n    //Node construction\n    createDocument() {\n        const node = new Document([]);\n        node['x-mode'] = html.DOCUMENT_MODE.NO_QUIRKS;\n        return node;\n    },\n    createDocumentFragment() {\n        return new Document([]);\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        const attribs = Object.create(null);\n        const attribsNamespace = Object.create(null);\n        const attribsPrefix = Object.create(null);\n        for (let i = 0; i < attrs.length; i++) {\n            const attrName = attrs[i].name;\n            attribs[attrName] = attrs[i].value;\n            attribsNamespace[attrName] = attrs[i].namespace;\n            attribsPrefix[attrName] = attrs[i].prefix;\n        }\n        const node = new Element(tagName, attribs, []);\n        node.namespace = namespaceURI;\n        node['x-attribsNamespace'] = attribsNamespace;\n        node['x-attribsPrefix'] = attribsPrefix;\n        return node;\n    },\n    createCommentNode(data) {\n        return new Comment(data);\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        const prev = parentNode.children[parentNode.children.length - 1];\n        if (prev) {\n            prev.next = newNode;\n            newNode.prev = prev;\n        }\n        parentNode.children.push(newNode);\n        newNode.parent = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.children.indexOf(referenceNode);\n        const { prev } = referenceNode;\n        if (prev) {\n            prev.next = newNode;\n            newNode.prev = prev;\n        }\n        referenceNode.prev = newNode;\n        newNode.next = referenceNode;\n        parentNode.children.splice(insertionIdx, 0, newNode);\n        newNode.parent = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        adapter.appendChild(templateElement, contentElement);\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.children[0];\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const data = serializeDoctypeContent(name, publicId, systemId);\n        let doctypeNode = document.children.find((node) => isDirective(node) && node.name === '!doctype');\n        if (doctypeNode) {\n            doctypeNode.data = data !== null && data !== void 0 ? data : null;\n        }\n        else {\n            doctypeNode = new ProcessingInstruction('!doctype', data);\n            adapter.appendChild(document, doctypeNode);\n        }\n        doctypeNode['x-name'] = name !== null && name !== void 0 ? name : undefined;\n        doctypeNode['x-publicId'] = publicId !== null && publicId !== void 0 ? publicId : undefined;\n        doctypeNode['x-systemId'] = systemId !== null && systemId !== void 0 ? systemId : undefined;\n    },\n    setDocumentMode(document, mode) {\n        document['x-mode'] = mode;\n    },\n    getDocumentMode(document) {\n        return document['x-mode'];\n    },\n    detachNode(node) {\n        if (node.parent) {\n            const idx = node.parent.children.indexOf(node);\n            const { prev, next } = node;\n            node.prev = null;\n            node.next = null;\n            if (prev) {\n                prev.next = next;\n            }\n            if (next) {\n                next.prev = prev;\n            }\n            node.parent.children.splice(idx, 1);\n            node.parent = null;\n        }\n    },\n    insertText(parentNode, text) {\n        const lastChild = parentNode.children[parentNode.children.length - 1];\n        if (lastChild && isText(lastChild)) {\n            lastChild.data += text;\n        }\n        else {\n            adapter.appendChild(parentNode, createTextNode(text));\n        }\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.children[parentNode.children.indexOf(referenceNode) - 1];\n        if (prevNode && isText(prevNode)) {\n            prevNode.data += text;\n        }\n        else {\n            adapter.insertBefore(parentNode, createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        for (let i = 0; i < attrs.length; i++) {\n            const attrName = attrs[i].name;\n            if (typeof recipient.attribs[attrName] === 'undefined') {\n                recipient.attribs[attrName] = attrs[i].value;\n                recipient['x-attribsNamespace'][attrName] = attrs[i].namespace;\n                recipient['x-attribsPrefix'][attrName] = attrs[i].prefix;\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.children[0];\n    },\n    getChildNodes(node) {\n        return node.children;\n    },\n    getParentNode(node) {\n        return node.parent;\n    },\n    getAttrList(element) {\n        return element.attributes;\n    },\n    //Node data\n    getTagName(element) {\n        return element.name;\n    },\n    getNamespaceURI(element) {\n        return element.namespace;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.data;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        var _a;\n        return (_a = doctypeNode['x-name']) !== null && _a !== void 0 ? _a : '';\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        var _a;\n        return (_a = doctypeNode['x-publicId']) !== null && _a !== void 0 ? _a : '';\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        var _a;\n        return (_a = doctypeNode['x-systemId']) !== null && _a !== void 0 ? _a : '';\n    },\n    //Node types\n    isDocumentTypeNode(node) {\n        return isDirective(node) && node.name === '!doctype';\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        if (location) {\n            node.startIndex = location.startOffset;\n            node.endIndex = location.endOffset;\n        }\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        if (endLocation.endOffset != null)\n            node.endIndex = endLocation.endOffset;\n        node.sourceCodeLocation = {\n            ...node.sourceCodeLocation,\n            ...endLocation,\n        };\n    },\n};\n//# sourceMappingURL=index.js.map", null, null, null, null, null, "export const KBS_URL =\n  'https://news.kbs.co.kr/api/getNewsList?currentPageNo=1&rowsPerPage=48&exceptPhotoYn=Y&broadCode=0001&needReporterInfo=Y&orderBy=broadDate_desc%2CbroadOrder_asc'\n\nexport const MBC_URL = 'https://imnews.imbc.com/replay'\n\nexport const SBS_URL = 'https://news.sbs.co.kr/news/programMain.do?prog_cd=R1'\n\nexport const JTBC_URL =\n  'https://news.jtbc.co.kr/Replay/news_replay.aspx?fcode=PR10000403'\n\nexport const CHANNEL_A_URL =\n  'https://www.ichannela.com/news/template/getProgramCateNews.do?catecode=000500&pgmCode=000500&search=date&isSetNowDate=true'\n\nexport const TV_CHOSUN_URL =\n  'http://news.tvchosun.com/svc/vod/ospc_news_prog_pan.html'\n", "import * as cheerio from 'cheerio'\nimport {\n  CHANNEL_A_URL,\n  JTBC_URL,\n  KBS_URL,\n  MBC_URL,\n  SBS_URL,\n  TV_CHOSUN_URL,\n} from './const'\nimport { ArticleType, ChannelAArticleType, KBSArticleType } from './types'\n\nexport const getKBSArticles = async (\n  date: string,\n): Promise<ArticleType[] | null> => {\n  try {\n    const url = `${KBS_URL}&broadDate=${date}`\n\n    const response = await fetch(url)\n    const resText = await response.text()\n    const resJson = JSON.parse(resText.replace(/\\n/g, ''))\n    const articleList = resJson.data\n\n    return articleList.map((article: KBSArticleType) => ({\n      category: article.menuName,\n      title: article.newsTitle,\n      url: `https://news.kbs.co.kr/news/view.do?ncd=${article.newsCode}`,\n      date: article.serviceTime.split(' ')[0].replace('-', ''),\n    }))\n  } catch (error) {\n    console.error('Error fetching KBS articles:', error)\n    return null\n  }\n}\n\nexport const getMBCArticles = async (date: string) => {\n  try {\n    const year = date.slice(0, 4)\n    const calendar = `${MBC_URL}/${year}/nwdesk/cal_data.js`\n\n    const calResponse = await fetch(calendar)\n    const calText = await calResponse.text()\n    const calJson = JSON.parse(calText.trim())\n    const dateId = calJson.DateList.find((item) => item.Day === date)?.CurrentID\n\n    if (!dateId) {\n      console.error('Calendar data not found for the given date:', date)\n      return null\n    }\n\n    const url = `${MBC_URL}/${year}/nwdesk/${dateId}_36510.html`\n\n    const response = await fetch(url)\n    const html = await response.text()\n    const $ = cheerio.load(html)\n    const articleList = $('div.list_area > ul.thumb_type > li')\n\n    return Array.from(articleList).map((element) => ({\n      title: $(element).find('.txt_w > .tit').text(),\n      url: $(element).find('a').attr('href'),\n      date: date,\n    }))\n  } catch (error) {\n    console.error('Error fetching MBC articles:', error)\n    return null\n  }\n}\n\nexport const getSBSArticles = async (\n  date: string,\n): Promise<ArticleType[] | null> => {\n  try {\n    const url = `${SBS_URL}&broad_date=${date}&plink=CAL&cooper=SBSNEWS`\n\n    const response = await fetch(url)\n    const html = await response.text()\n    const $ = cheerio.load(html)\n    const articleDate = $('#btn-open-datepicker2 > .date')\n      .text()\n      .replace(/./g, '')\n    const articleList = $('ul#article-list > li')\n\n    return Array.from(articleList).map((element) => {\n      const category = $(element).find('em.cate').text()\n      return {\n        category: category,\n        title: $(element).find('strong').text().replace(category, '').trim(),\n        url: `https://news.sbs.co.kr${$(element).find('a').attr('href')}`,\n        date: articleDate,\n      }\n    })\n  } catch (error) {\n    console.error('Error fetching KBS articles:', error)\n    return null\n  }\n}\n\nexport const getJTBCArticles = async (\n  date: string,\n): Promise<ArticleType[] | null> => {\n  try {\n    const url = `${JTBC_URL}&strSearchDate=${date}`\n\n    const response = await fetch(url)\n    const html = await response.text()\n    const $ = cheerio.load(html)\n    const articleDate = $(\n      '#form1 > div.news_main > div.review_list > div.hd > h4',\n    )\n      .text()\n      .split('(')[0]\n      .replace(/./g, '')\n      .trim()\n    const articleList = $(\n      '#form1 > div.news_main > div.review_list > div.bd > ul > li',\n    )\n\n    return Array.from(articleList).map((element) => ({\n      title: $(element).find('div.rt > dl > dt >a').text(),\n      url: $(element).find('div.rt > dl > dt >a').attr('href'),\n      date: articleDate,\n    }))\n  } catch (error) {\n    console.error('Error fetching KBS articles:', error)\n    return null\n  }\n}\n\nexport const getChannelAArticles = async (\n  date: string,\n): Promise<ArticleType[] | null> => {\n  try {\n    const url = `${CHANNEL_A_URL}&selectedDate=${date}`\n\n    const articleList = <ChannelAArticleType[]>[]\n\n    for (let i = 0; i < 5; i++) {\n      const response = await fetch(`${url}&pageNum=${i + 1}`)\n      const resText = await response.text()\n      const resJson = JSON.parse(resText.replace(/\\n/g, ''))\n      articleList.push(...resJson.programNewsList)\n\n      if (resJson.programNewsList.length === 0) break\n    }\n\n    return articleList.map((article) => ({\n      title: article.TITLE,\n      url: `https://www.ichannela.com/news/main/news_detailPage.do?publishId=${article.PUBLISH_ID}`,\n      date: article.SVC_START_DATE,\n    }))\n  } catch (error) {\n    console.error('Error fetching KBS articles:', error)\n    return null\n  }\n}\n\nexport const getTVChosunArticles = async (\n  date: string,\n): Promise<ArticleType[] | null> => {\n  try {\n    const dateStrp = new Date(\n      `${date.slice(0, 4)}-${date.slice(4, 6)}-${date.slice(6, 8)}`,\n    )\n    const weekday = dateStrp.getDay()\n    const isHoliday = weekday === 0 || weekday === 6\n    const url = `${TV_CHOSUN_URL}?catid=${\n      isHoliday ? '75' : '2P'\n    }&source=&indate=${date}`\n\n    const response = await fetch(url)\n    const html = await response.text()\n    const $ = cheerio.load(html)\n    const articleDate = $('#iframe > div.newstop_area > p')\n      .text()\n      .split('(')[0]\n      .replace(/./g, '')\n      .trim()\n    const articleList = $('#iframe > div.bbs_zine.top_line > ul > li')\n\n    return Array.from(articleList).map((element) => {\n      const href = $(element)\n        .find('div.detail > p.article_tit > a')\n        .attr('onclick')\n      const match = href?.match(/go_url\\('([^']+)'\\)/)\n\n      return {\n        category: $(element).find('div.detail > p.tag > span').first().text(),\n        title: $(element).find('div.detail > p.article_tit > a').text(),\n        url: match ? match[1] : '',\n        date: articleDate,\n      }\n    })\n  } catch (error) {\n    console.error('Error fetching KBS articles:', error)\n    return null\n  }\n}\n", "import {\n  getChannelAArticles,\n  getJTBCArticles,\n  getKBSArticles,\n  getMBCArticles,\n  getSBSArticles,\n  getTVChosunArticles,\n} from '../../lib'\nimport { ArticleType } from '../../lib/types'\n\nexport const onRequestGet = async (context) => {\n  const broadcast = context.params.catchall[0]\n  const date = context.params.catchall[1]\n\n  let res = <ArticleType[] | null>[]\n  switch (broadcast.toLowerCase()) {\n    case 'kbs':\n      res = await getKBSArticles(date)\n      break\n\n    case 'mbc':\n      res = await getMBCArticles(date)\n      break\n\n    case 'sbs':\n      res = await getSBSArticles(date)\n      break\n\n    case 'jtbc':\n      res = await getJTBCArticles(date)\n      break\n\n    case 'channel-a':\n      res = await getChannelAArticles(date)\n      break\n\n    case 'tv-chosun':\n      res = await getTVChosunArticles(date)\n      break\n  }\n  return new Response(JSON.stringify(res))\n}\n", "import { onRequestGet as __api_articles___catchall___ts_onRequestGet } from \"C:\\\\works\\\\github\\\\news-monitor-react\\\\functions\\\\api\\\\articles\\\\[[catchall]].ts\"\n\nexport const routes = [\n    {\n      routePath: \"/api/articles/:catchall*\",\n      mountPath: \"/api/articles\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_articles___catchall___ts_onRequestGet],\n    },\n  ]", "// // This loads all middlewares exposed on the middleware object\n// // and then starts the invocation chain.\n// // The big idea is that we can add these to the middleware export dynamically\n// // through wrangler, or we can potentially let users directly add them as a sort\n// // of \"plugin\" system.\n\nimport worker from \"C:\\\\works\\\\github\\\\news-monitor-react\\\\.wrangler\\\\tmp\\\\bundle-RYqzE3\\\\middleware-insertion-facade.js\";\nimport {\n\t__facade_invoke__,\n\t__facade_register__,\n\tDispatcher,\n\tMiddleware,\n} from \"C:\\\\works\\\\github\\\\news-monitor-react\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\n\n// We need to preserve all of the exports from the worker\nexport * from \"C:\\\\works\\\\github\\\\news-monitor-react\\\\.wrangler\\\\tmp\\\\bundle-RYqzE3\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\t#noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nconst __facade_modules_fetch__: ExportedHandlerFetchHandler = function (\n\trequest,\n\tenv,\n\tctx\n) {\n\tif (worker.fetch === undefined)\n\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\treturn worker.fetch(request, env, ctx);\n};\n\nfunction getMaskedEnv(rawEnv: unknown) {\n\tlet env = rawEnv as Record<string, unknown>;\n\tif (worker.envWrappers && worker.envWrappers.length > 0) {\n\t\tfor (const wrapFn of worker.envWrappers) {\n\t\t\tenv = wrapFn(env);\n\t\t}\n\t}\n\treturn env;\n}\n\n/**\n * This type is here to cause a type error if a new export handler is added to\n * `ExportHandler` without it being included in the `facade` below.\n */\ntype MissingExportHandlers = Omit<\n\tRequired<ExportedHandler>,\n\t\"tail\" | \"trace\" | \"scheduled\" | \"queue\" | \"test\" | \"email\" | \"fetch\"\n>;\n\nlet registeredMiddleware = false;\n\nconst facade: ExportedHandler<unknown> & MissingExportHandlers = {\n\t...(worker.tail && {\n\t\ttail: maskHandlerEnv(worker.tail),\n\t}),\n\t...(worker.trace && {\n\t\ttrace: maskHandlerEnv(worker.trace),\n\t}),\n\t...(worker.scheduled && {\n\t\tscheduled: maskHandlerEnv(worker.scheduled),\n\t}),\n\t...(worker.queue && {\n\t\tqueue: maskHandlerEnv(worker.queue),\n\t}),\n\t...(worker.test && {\n\t\ttest: maskHandlerEnv(worker.test),\n\t}),\n\t...(worker.email && {\n\t\temail: maskHandlerEnv(worker.email),\n\t}),\n\n\tfetch(request, rawEnv, ctx) {\n\t\tconst env = getMaskedEnv(rawEnv);\n\t\t// Get the chain of middleware from the worker object\n\t\tif (worker.middleware && worker.middleware.length > 0) {\n\t\t\t// Make sure we only register middleware once:\n\t\t\t// https://github.com/cloudflare/workers-sdk/issues/2386#issuecomment-1614715911\n\t\t\tif (!registeredMiddleware) {\n\t\t\t\tregisteredMiddleware = true;\n\t\t\t\tfor (const middleware of worker.middleware) {\n\t\t\t\t\t__facade_register__(middleware);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst __facade_modules_dispatch__: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tenv,\n\t\t\t\tctx,\n\t\t\t\t__facade_modules_dispatch__,\n\t\t\t\t__facade_modules_fetch__\n\t\t\t);\n\t\t} else {\n\t\t\t// We didn't have any middleware so we can skip the invocation chain,\n\t\t\t// and just call the fetch handler directly\n\n\t\t\t// We \"don't care\" if this is undefined as we want to have the same behavior\n\t\t\t// as if the worker completely bypassed middleware.\n\t\t\treturn __facade_modules_fetch__(request, env, ctx);\n\t\t}\n\t},\n};\n\ntype HandlerFn<D, R> = (data: D, env: unknown, ctx: ExecutionContext) => R;\nfunction maskHandlerEnv<D, R>(handler: HandlerFn<D, R>): HandlerFn<D, R> {\n\treturn (data, env, ctx) => handler(data, getMaskedEnv(env), ctx);\n}\n\nexport default facade;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"C:\\\\works\\\\github\\\\news-monitor-react\\\\node_modules\\\\wrangler\\\\templates\\\\pages-template-worker.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"C:\\\\works\\\\github\\\\news-monitor-react\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"C:\\\\works\\\\github\\\\news-monitor-react\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\t\t\t\tconst envWrappers = [__MIDDLEWARE_0__.wrap,__MIDDLEWARE_1__.wrap].filter(Boolean);\n\t\t\t\tconst facade = {\n\t\t\t\t\t...worker,\n\t\t\t\t\tenvWrappers,\n\t\t\t\t\tmiddleware: [\n\t\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default,\n            ...(worker.middleware ? worker.middleware : []),\n\t\t\t\t\t].filter(Boolean)\n\t\t\t\t}\n\t\t\t\texport * from \"C:\\\\works\\\\github\\\\news-monitor-react\\\\node_modules\\\\wrangler\\\\templates\\\\pages-template-worker.ts\";\n\n\t\t\t\tconst maskDurableObjectDefinition = (cls) =>\n\t\t\t\t\tclass extends cls {\n\t\t\t\t\t\tconstructor(state, env) {\n\t\t\t\t\t\t\tlet wrappedEnv = env\n\t\t\t\t\t\t\tfor (const wrapFn of envWrappers) {\n\t\t\t\t\t\t\t\twrappedEnv = wrapFn(wrappedEnv)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsuper(state, wrappedEnv);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\n\n\t\t\t\texport default facade;", "import { match } from \"path-to-regexp\";\n\n//note: this explicitly does not include the * character, as pages requires this\nconst escapeRegex = /[.+?^${}()|[\\]\\\\]/g;\n\ntype HTTPMethod =\n\t| \"HEAD\"\n\t| \"OPTIONS\"\n\t| \"GET\"\n\t| \"POST\"\n\t| \"PUT\"\n\t| \"PATCH\"\n\t| \"DELETE\";\n\n/* TODO: Grab these from @cloudflare/workers-types instead */\ntype Params<P extends string = string> = Record<P, string | string[]>;\n\ntype EventContext<Env, P extends string, Data> = {\n\trequest: Request;\n\tfunctionPath: string;\n\twaitUntil: (promise: Promise<unknown>) => void;\n\tpassThroughOnException: () => void;\n\tnext: (input?: Request | string, init?: RequestInit) => Promise<Response>;\n\tenv: Env & { ASSETS: { fetch: typeof fetch } };\n\tparams: Params<P>;\n\tdata: Data;\n};\n\ndeclare type PagesFunction<\n\tEnv = unknown,\n\tP extends string = string,\n\tData extends Record<string, unknown> = Record<string, unknown>\n> = (context: EventContext<Env, P, Data>) => Response | Promise<Response>;\n/* end @cloudflare/workers-types */\n\ntype RouteHandler = {\n\troutePath: string;\n\tmountPath: string;\n\tmethod?: HTTPMethod;\n\tmodules: PagesFunction[];\n\tmiddlewares: PagesFunction[];\n};\n\n// inject `routes` via ESBuild\ndeclare const routes: RouteHandler[];\n// define `__FALLBACK_SERVICE__` via ESBuild\ndeclare const __FALLBACK_SERVICE__: string;\n\n// expect an ASSETS fetcher binding pointing to the asset-server stage\ntype FetchEnv = {\n\t[name: string]: { fetch: typeof fetch };\n\tASSETS: { fetch: typeof fetch };\n};\n\ntype WorkerContext = {\n\twaitUntil: (promise: Promise<unknown>) => void;\n\tpassThroughOnException: () => void;\n};\n\nfunction* executeRequest(request: Request) {\n\tconst requestPath = new URL(request.url).pathname;\n\n\t// First, iterate through the routes (backwards) and execute \"middlewares\" on partial route matches\n\tfor (const route of [...routes].reverse()) {\n\t\tif (route.method && route.method !== request.method) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// replaces with \"\\\\$&\", this prepends a backslash to the matched string, e.g. \"[\" becomes \"\\[\"\n\t\tconst routeMatcher = match(route.routePath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst mountMatcher = match(route.mountPath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst matchResult = routeMatcher(requestPath);\n\t\tconst mountMatchResult = mountMatcher(requestPath);\n\t\tif (matchResult && mountMatchResult) {\n\t\t\tfor (const handler of route.middlewares.flat()) {\n\t\t\t\tyield {\n\t\t\t\t\thandler,\n\t\t\t\t\tparams: matchResult.params as Params,\n\t\t\t\t\tpath: mountMatchResult.path,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\t// Then look for the first exact route match and execute its \"modules\"\n\tfor (const route of routes) {\n\t\tif (route.method && route.method !== request.method) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst routeMatcher = match(route.routePath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: true,\n\t\t});\n\t\tconst mountMatcher = match(route.mountPath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst matchResult = routeMatcher(requestPath);\n\t\tconst mountMatchResult = mountMatcher(requestPath);\n\t\tif (matchResult && mountMatchResult && route.modules.length) {\n\t\t\tfor (const handler of route.modules.flat()) {\n\t\t\t\tyield {\n\t\t\t\t\thandler,\n\t\t\t\t\tparams: matchResult.params as Params,\n\t\t\t\t\tpath: matchResult.path,\n\t\t\t\t};\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport default {\n\tasync fetch(\n\t\toriginalRequest: Request,\n\t\tenv: FetchEnv,\n\t\tworkerContext: WorkerContext\n\t) {\n\t\tlet request = originalRequest;\n\t\tconst handlerIterator = executeRequest(request);\n\t\tlet data = {}; // arbitrary data the user can set between functions\n\t\tlet isFailOpen = false;\n\n\t\tconst next = async (input?: RequestInfo, init?: RequestInit) => {\n\t\t\tif (input !== undefined) {\n\t\t\t\tlet url = input;\n\t\t\t\tif (typeof input === \"string\") {\n\t\t\t\t\turl = new URL(input, request.url).toString();\n\t\t\t\t}\n\t\t\t\trequest = new Request(url, init);\n\t\t\t}\n\n\t\t\tconst result = handlerIterator.next();\n\t\t\t// Note we can't use `!result.done` because this doesn't narrow to the correct type\n\t\t\tif (result.done === false) {\n\t\t\t\tconst { handler, params, path } = result.value;\n\t\t\t\tconst context = {\n\t\t\t\t\trequest: new Request(request.clone()),\n\t\t\t\t\tfunctionPath: path,\n\t\t\t\t\tnext,\n\t\t\t\t\tparams,\n\t\t\t\t\tget data() {\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t},\n\t\t\t\t\tset data(value) {\n\t\t\t\t\t\tif (typeof value !== \"object\" || value === null) {\n\t\t\t\t\t\t\tthrow new Error(\"context.data must be an object\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// user has overriden context.data, so we need to merge it with the existing data\n\t\t\t\t\t\tdata = value;\n\t\t\t\t\t},\n\t\t\t\t\tenv,\n\t\t\t\t\twaitUntil: workerContext.waitUntil.bind(workerContext),\n\t\t\t\t\tpassThroughOnException: () => {\n\t\t\t\t\t\tisFailOpen = true;\n\t\t\t\t\t},\n\t\t\t\t};\n\n\t\t\t\tconst response = await handler(context);\n\n\t\t\t\tif (!(response instanceof Response)) {\n\t\t\t\t\tthrow new Error(\"Your Pages function should return a Response\");\n\t\t\t\t}\n\n\t\t\t\treturn cloneResponse(response);\n\t\t\t} else if (__FALLBACK_SERVICE__) {\n\t\t\t\t// There are no more handlers so finish with the fallback service (`env.ASSETS.fetch` in Pages' case)\n\t\t\t\tconst response = await env[__FALLBACK_SERVICE__].fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t} else {\n\t\t\t\t// There was not fallback service so actually make the request to the origin.\n\t\t\t\tconst response = await fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t}\n\t\t};\n\n\t\ttry {\n\t\t\treturn await next();\n\t\t} catch (error) {\n\t\t\tif (isFailOpen) {\n\t\t\t\tconst response = await env[__FALLBACK_SERVICE__].fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\t},\n};\n\n// This makes a Response mutable\nconst cloneResponse = (response: Response) =>\n\t// https://fetch.spec.whatwg.org/#null-body-status\n\tnew Response(\n\t\t[101, 204, 205, 304].includes(response.status) ? null : response.body,\n\t\tresponse\n\t);\n", "/**\n * Tokenizer results.\n */\ninterface LexToken {\n  type:\n    | \"OPEN\"\n    | \"CLOSE\"\n    | \"PATTERN\"\n    | \"NAME\"\n    | \"CHAR\"\n    | \"ESCAPED_CHAR\"\n    | \"MODIFIER\"\n    | \"END\";\n  index: number;\n  value: string;\n}\n\n/**\n * Tokenize input string.\n */\nfunction lexer(str: string): LexToken[] {\n  const tokens: LexToken[] = [];\n  let i = 0;\n\n  while (i < str.length) {\n    const char = str[i];\n\n    if (char === \"*\" || char === \"+\" || char === \"?\") {\n      tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"\\\\\") {\n      tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"{\") {\n      tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"}\") {\n      tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \":\") {\n      let name = \"\";\n      let j = i + 1;\n\n      while (j < str.length) {\n        const code = str.charCodeAt(j);\n\n        if (\n          // `0-9`\n          (code >= 48 && code <= 57) ||\n          // `A-Z`\n          (code >= 65 && code <= 90) ||\n          // `a-z`\n          (code >= 97 && code <= 122) ||\n          // `_`\n          code === 95\n        ) {\n          name += str[j++];\n          continue;\n        }\n\n        break;\n      }\n\n      if (!name) throw new TypeError(`Missing parameter name at ${i}`);\n\n      tokens.push({ type: \"NAME\", index: i, value: name });\n      i = j;\n      continue;\n    }\n\n    if (char === \"(\") {\n      let count = 1;\n      let pattern = \"\";\n      let j = i + 1;\n\n      if (str[j] === \"?\") {\n        throw new TypeError(`Pattern cannot start with \"?\" at ${j}`);\n      }\n\n      while (j < str.length) {\n        if (str[j] === \"\\\\\") {\n          pattern += str[j++] + str[j++];\n          continue;\n        }\n\n        if (str[j] === \")\") {\n          count--;\n          if (count === 0) {\n            j++;\n            break;\n          }\n        } else if (str[j] === \"(\") {\n          count++;\n          if (str[j + 1] !== \"?\") {\n            throw new TypeError(`Capturing groups are not allowed at ${j}`);\n          }\n        }\n\n        pattern += str[j++];\n      }\n\n      if (count) throw new TypeError(`Unbalanced pattern at ${i}`);\n      if (!pattern) throw new TypeError(`Missing pattern at ${i}`);\n\n      tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n      i = j;\n      continue;\n    }\n\n    tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n  }\n\n  tokens.push({ type: \"END\", index: i, value: \"\" });\n\n  return tokens;\n}\n\nexport interface ParseOptions {\n  /**\n   * Set the default delimiter for repeat parameters. (default: `'/'`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters to automatically consider prefixes when parsing.\n   */\n  prefixes?: string;\n}\n\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str: string, options: ParseOptions = {}): Token[] {\n  const tokens = lexer(str);\n  const { prefixes = \"./\" } = options;\n  const defaultPattern = `[^${escapeString(options.delimiter || \"/#?\")}]+?`;\n  const result: Token[] = [];\n  let key = 0;\n  let i = 0;\n  let path = \"\";\n\n  const tryConsume = (type: LexToken[\"type\"]): string | undefined => {\n    if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;\n  };\n\n  const mustConsume = (type: LexToken[\"type\"]): string => {\n    const value = tryConsume(type);\n    if (value !== undefined) return value;\n    const { type: nextType, index } = tokens[i];\n    throw new TypeError(`Unexpected ${nextType} at ${index}, expected ${type}`);\n  };\n\n  const consumeText = (): string => {\n    let result = \"\";\n    let value: string | undefined;\n    while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n      result += value;\n    }\n    return result;\n  };\n\n  while (i < tokens.length) {\n    const char = tryConsume(\"CHAR\");\n    const name = tryConsume(\"NAME\");\n    const pattern = tryConsume(\"PATTERN\");\n\n    if (name || pattern) {\n      let prefix = char || \"\";\n\n      if (prefixes.indexOf(prefix) === -1) {\n        path += prefix;\n        prefix = \"\";\n      }\n\n      if (path) {\n        result.push(path);\n        path = \"\";\n      }\n\n      result.push({\n        name: name || key++,\n        prefix,\n        suffix: \"\",\n        pattern: pattern || defaultPattern,\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    const value = char || tryConsume(\"ESCAPED_CHAR\");\n    if (value) {\n      path += value;\n      continue;\n    }\n\n    if (path) {\n      result.push(path);\n      path = \"\";\n    }\n\n    const open = tryConsume(\"OPEN\");\n    if (open) {\n      const prefix = consumeText();\n      const name = tryConsume(\"NAME\") || \"\";\n      const pattern = tryConsume(\"PATTERN\") || \"\";\n      const suffix = consumeText();\n\n      mustConsume(\"CLOSE\");\n\n      result.push({\n        name: name || (pattern ? key++ : \"\"),\n        pattern: name && !pattern ? defaultPattern : pattern,\n        prefix,\n        suffix,\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    mustConsume(\"END\");\n  }\n\n  return result;\n}\n\nexport interface TokensToFunctionOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * Function for encoding input strings for output.\n   */\n  encode?: (value: string, token: Key) => string;\n  /**\n   * When `false` the function can produce an invalid (unmatched) path. (default: `true`)\n   */\n  validate?: boolean;\n}\n\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile<P extends object = object>(\n  str: string,\n  options?: ParseOptions & TokensToFunctionOptions\n) {\n  return tokensToFunction<P>(parse(str, options), options);\n}\n\nexport type PathFunction<P extends object = object> = (data?: P) => string;\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction<P extends object = object>(\n  tokens: Token[],\n  options: TokensToFunctionOptions = {}\n): PathFunction<P> {\n  const reFlags = flags(options);\n  const { encode = (x: string) => x, validate = true } = options;\n\n  // Compile all the tokens into regexps.\n  const matches = tokens.map((token) => {\n    if (typeof token === \"object\") {\n      return new RegExp(`^(?:${token.pattern})$`, reFlags);\n    }\n  });\n\n  return (data: Record<string, any> | null | undefined) => {\n    let path = \"\";\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (typeof token === \"string\") {\n        path += token;\n        continue;\n      }\n\n      const value = data ? data[token.name] : undefined;\n      const optional = token.modifier === \"?\" || token.modifier === \"*\";\n      const repeat = token.modifier === \"*\" || token.modifier === \"+\";\n\n      if (Array.isArray(value)) {\n        if (!repeat) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to not repeat, but got an array`\n          );\n        }\n\n        if (value.length === 0) {\n          if (optional) continue;\n\n          throw new TypeError(`Expected \"${token.name}\" to not be empty`);\n        }\n\n        for (let j = 0; j < value.length; j++) {\n          const segment = encode(value[j], token);\n\n          if (validate && !(matches[i] as RegExp).test(segment)) {\n            throw new TypeError(\n              `Expected all \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`\n            );\n          }\n\n          path += token.prefix + segment + token.suffix;\n        }\n\n        continue;\n      }\n\n      if (typeof value === \"string\" || typeof value === \"number\") {\n        const segment = encode(String(value), token);\n\n        if (validate && !(matches[i] as RegExp).test(segment)) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`\n          );\n        }\n\n        path += token.prefix + segment + token.suffix;\n        continue;\n      }\n\n      if (optional) continue;\n\n      const typeOfMessage = repeat ? \"an array\" : \"a string\";\n      throw new TypeError(`Expected \"${token.name}\" to be ${typeOfMessage}`);\n    }\n\n    return path;\n  };\n}\n\nexport interface RegexpToFunctionOptions {\n  /**\n   * Function for decoding strings for params.\n   */\n  decode?: (value: string, token: Key) => string;\n}\n\n/**\n * A match result contains data about the path match.\n */\nexport interface MatchResult<P extends object = object> {\n  path: string;\n  index: number;\n  params: P;\n}\n\n/**\n * A match is either `false` (no match) or a match result.\n */\nexport type Match<P extends object = object> = false | MatchResult<P>;\n\n/**\n * The match function takes a string and returns whether it matched the path.\n */\nexport type MatchFunction<P extends object = object> = (\n  path: string\n) => Match<P>;\n\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match<P extends object = object>(\n  str: Path,\n  options?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions\n) {\n  const keys: Key[] = [];\n  const re = pathToRegexp(str, keys, options);\n  return regexpToFunction<P>(re, keys, options);\n}\n\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction<P extends object = object>(\n  re: RegExp,\n  keys: Key[],\n  options: RegexpToFunctionOptions = {}\n): MatchFunction<P> {\n  const { decode = (x: string) => x } = options;\n\n  return function (pathname: string) {\n    const m = re.exec(pathname);\n    if (!m) return false;\n\n    const { 0: path, index } = m;\n    const params = Object.create(null);\n\n    for (let i = 1; i < m.length; i++) {\n      if (m[i] === undefined) continue;\n\n      const key = keys[i - 1];\n\n      if (key.modifier === \"*\" || key.modifier === \"+\") {\n        params[key.name] = m[i].split(key.prefix + key.suffix).map((value) => {\n          return decode(value, key);\n        });\n      } else {\n        params[key.name] = decode(m[i], key);\n      }\n    }\n\n    return { path, index, params };\n  };\n}\n\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str: string) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options?: { sensitive?: boolean }) {\n  return options && options.sensitive ? \"\" : \"i\";\n}\n\n/**\n * Metadata about a key.\n */\nexport interface Key {\n  name: string | number;\n  prefix: string;\n  suffix: string;\n  pattern: string;\n  modifier: string;\n}\n\n/**\n * A token is a string (nothing special) or key metadata (capture group).\n */\nexport type Token = string | Key;\n\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path: RegExp, keys?: Key[]): RegExp {\n  if (!keys) return path;\n\n  const groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n\n  let index = 0;\n  let execResult = groupsRegex.exec(path.source);\n  while (execResult) {\n    keys.push({\n      // Use parenthesized substring match if available, index otherwise\n      name: execResult[1] || index++,\n      prefix: \"\",\n      suffix: \"\",\n      modifier: \"\",\n      pattern: \"\",\n    });\n    execResult = groupsRegex.exec(path.source);\n  }\n\n  return path;\n}\n\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(\n  paths: Array<string | RegExp>,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions\n): RegExp {\n  const parts = paths.map((path) => pathToRegexp(path, keys, options).source);\n  return new RegExp(`(?:${parts.join(\"|\")})`, flags(options));\n}\n\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(\n  path: string,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions\n) {\n  return tokensToRegexp(parse(path, options), keys, options);\n}\n\nexport interface TokensToRegexpOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * When `true` the regexp won't allow an optional trailing delimiter to match. (default: `false`)\n   */\n  strict?: boolean;\n  /**\n   * When `true` the regexp will match to the end of the string. (default: `true`)\n   */\n  end?: boolean;\n  /**\n   * When `true` the regexp will match from the beginning of the string. (default: `true`)\n   */\n  start?: boolean;\n  /**\n   * Sets the final character for non-ending optimistic matches. (default: `/`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters that can also be \"end\" characters.\n   */\n  endsWith?: string;\n  /**\n   * Encode path tokens for use in the `RegExp`.\n   */\n  encode?: (value: string) => string;\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(\n  tokens: Token[],\n  keys?: Key[],\n  options: TokensToRegexpOptions = {}\n) {\n  const {\n    strict = false,\n    start = true,\n    end = true,\n    encode = (x: string) => x,\n    delimiter = \"/#?\",\n    endsWith = \"\",\n  } = options;\n  const endsWithRe = `[${escapeString(endsWith)}]|$`;\n  const delimiterRe = `[${escapeString(delimiter)}]`;\n  let route = start ? \"^\" : \"\";\n\n  // Iterate over the tokens and create our regexp string.\n  for (const token of tokens) {\n    if (typeof token === \"string\") {\n      route += escapeString(encode(token));\n    } else {\n      const prefix = escapeString(encode(token.prefix));\n      const suffix = escapeString(encode(token.suffix));\n\n      if (token.pattern) {\n        if (keys) keys.push(token);\n\n        if (prefix || suffix) {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            const mod = token.modifier === \"*\" ? \"?\" : \"\";\n            route += `(?:${prefix}((?:${token.pattern})(?:${suffix}${prefix}(?:${token.pattern}))*)${suffix})${mod}`;\n          } else {\n            route += `(?:${prefix}(${token.pattern})${suffix})${token.modifier}`;\n          }\n        } else {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            route += `((?:${token.pattern})${token.modifier})`;\n          } else {\n            route += `(${token.pattern})${token.modifier}`;\n          }\n        }\n      } else {\n        route += `(?:${prefix}${suffix})${token.modifier}`;\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += `${delimiterRe}?`;\n\n    route += !options.endsWith ? \"$\" : `(?=${endsWithRe})`;\n  } else {\n    const endToken = tokens[tokens.length - 1];\n    const isEndDelimited =\n      typeof endToken === \"string\"\n        ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1\n        : endToken === undefined;\n\n    if (!strict) {\n      route += `(?:${delimiterRe}(?=${endsWithRe}))?`;\n    }\n\n    if (!isEndDelimited) {\n      route += `(?=${delimiterRe}|${endsWithRe})`;\n    }\n  }\n\n  return new RegExp(route, flags(options));\n}\n\n/**\n * Supported `path-to-regexp` input types.\n */\nexport type Path = string | RegExp | Array<string | RegExp>;\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(\n  path: Path,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions\n) {\n  if (path instanceof RegExp) return regexpToRegexp(path, keys);\n  if (Array.isArray(path)) return arrayToRegexp(path, keys, options);\n  return stringToRegexp(path, keys, options);\n}\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\nexport const wrap = undefined;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\nexport const wrap = undefined;\n", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,SAAS,SAAS,SAAS,MAAM;AAChC,QAAM,MACL,mBAAmB,MAChB,UACA,IAAI;AAAA,KACH,OAAO,YAAY,WACjB,IAAI,QAAQ,SAAS,IAAI,IACzB,SACD;AAAA,EACF;AACJ,MAAI,IAAI,QAAQ,IAAI,SAAS,SAAS,IAAI,aAAa,UAAU;AAChE,QAAI,CAAC,KAAK,IAAI,IAAI,SAAS,CAAC,GAAG;AAC9B,WAAK,IAAI,IAAI,SAAS,CAAC;AACvB,cAAQ;AAAA,QACP;AAAA,KACO,IAAI,SAAS;AAAA;AAAA,MACrB;AAAA,IACD;AAAA,EACD;AACD;AArBA,IAAM;AAAN;AAAA;AAAA;AAAA,IAAM,OAAO,oBAAI,IAAI;AAuBrB,eAAW,QAAQ,IAAI,MAAM,WAAW,OAAO;AAAA,MAC9C,MAAM,QAAQ,SAAS,UAAU;AAChC,cAAM,CAAC,SAAS,IAAI,IAAI;AACxB,iBAAS,SAAS,IAAI;AACtB,eAAO,QAAQ,MAAM,QAAQ,SAAS,QAAQ;AAAA,MAC/C;AAAA,IACD,CAAC;AAAA;AAAA;;;AC7BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAGA;AAAA;AAAA;;;ACHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACsGM,SAAU,QACd,SAA+B;AAE/B,UAAO,YAAO,QAAP,YAAO,SAAA,SAAP,QAAS,OACZ,OAAO,QAAQ,QAAQ,YACrB,iBACA,EAAE,GAAG,gBAAgB,GAAG,QAAQ,IAAG,IACrC,YAAO,QAAP,YAAO,SAAP,UAAW;AACjB;AA7BA,IAAM,aAMN,iBAEM;AARN;;;;;IAAM,cAA8B;MAClC,KAAK;MACL,gBAAgB;;AAIlB,IAAA,kBAAe;AAEf,IAAM,iBAAkC;MACtC,iBAAiB;MACjB,SAAS;;;;;;AChEJ,SAAS,MAAM,MAAM;AACxB,SAAQ,KAAK,SAAS,YAAY,OAC9B,KAAK,SAAS,YAAY,UAC1B,KAAK,SAAS,YAAY;AAClC;AA/BA,IACW,aAiCE,MAEA,MAEA,WAEA,SAEA,QAEA,OAEA,KAEA,OAEA;AAlDb;AAAA;AAAA;AAAA;AAAA;AAEA,KAAC,SAAUA,cAAa;AAEpB,MAAAA,aAAY,MAAM,IAAI;AAEtB,MAAAA,aAAY,MAAM,IAAI;AAEtB,MAAAA,aAAY,WAAW,IAAI;AAE3B,MAAAA,aAAY,SAAS,IAAI;AAEzB,MAAAA,aAAY,QAAQ,IAAI;AAExB,MAAAA,aAAY,OAAO,IAAI;AAEvB,MAAAA,aAAY,KAAK,IAAI;AAErB,MAAAA,aAAY,OAAO,IAAI;AAEvB,MAAAA,aAAY,SAAS,IAAI;AAAA,IAC7B,GAAG,gBAAgB,cAAc,CAAC,EAAE;AAa7B,IAAM,OAAO,YAAY;AAEzB,IAAM,OAAO,YAAY;AAEzB,IAAM,YAAY,YAAY;AAE9B,IAAM,UAAU,YAAY;AAE5B,IAAM,SAAS,YAAY;AAE3B,IAAM,QAAQ,YAAY;AAE1B,IAAM,MAAM,YAAY;AAExB,IAAM,QAAQ,YAAY;AAE1B,IAAM,UAAU,YAAY;AAAA;AAAA;;;AC4K5B,SAASC,OAAM,MAAM;AACxB,SAAO,MAAS,IAAI;AACxB;AAKO,SAAS,QAAQ,MAAM;AAC1B,SAAO,KAAK,SAAS,YAAY;AACrC;AAKO,SAAS,OAAO,MAAM;AACzB,SAAO,KAAK,SAAS,YAAY;AACrC;AAKO,SAAS,UAAU,MAAM;AAC5B,SAAO,KAAK,SAAS,YAAY;AACrC;AAKO,SAAS,YAAY,MAAM;AAC9B,SAAO,KAAK,SAAS,YAAY;AACrC;AAKO,SAAS,WAAW,MAAM;AAC7B,SAAO,KAAK,SAAS,YAAY;AACrC;AAKO,SAAS,YAAY,MAAM;AAC9B,SAAO,OAAO,UAAU,eAAe,KAAK,MAAM,UAAU;AAChE;AAOO,SAAS,UAAU,MAAM,YAAY,OAAO;AAC/C,MAAI;AACJ,MAAI,OAAO,IAAI,GAAG;AACd,aAAS,IAAIC,MAAK,KAAK,IAAI;AAAA,EAC/B,WACS,UAAU,IAAI,GAAG;AACtB,aAAS,IAAIC,SAAQ,KAAK,IAAI;AAAA,EAClC,WACSF,OAAM,IAAI,GAAG;AAClB,UAAMG,YAAW,YAAY,cAAc,KAAK,QAAQ,IAAI,CAAC;AAC7D,UAAMC,SAAQ,IAAI,QAAQ,KAAK,MAAM,EAAE,GAAG,KAAK,QAAQ,GAAGD,SAAQ;AAClE,IAAAA,UAAS,QAAQ,CAAC,UAAW,MAAM,SAASC,MAAM;AAClD,QAAI,KAAK,aAAa,MAAM;AACxB,MAAAA,OAAM,YAAY,KAAK;AAAA,IAC3B;AACA,QAAI,KAAK,oBAAoB,GAAG;AAC5B,MAAAA,OAAM,oBAAoB,IAAI,EAAE,GAAG,KAAK,oBAAoB,EAAE;AAAA,IAClE;AACA,QAAI,KAAK,iBAAiB,GAAG;AACzB,MAAAA,OAAM,iBAAiB,IAAI,EAAE,GAAG,KAAK,iBAAiB,EAAE;AAAA,IAC5D;AACA,aAASA;AAAA,EACb,WACS,QAAQ,IAAI,GAAG;AACpB,UAAMD,YAAW,YAAY,cAAc,KAAK,QAAQ,IAAI,CAAC;AAC7D,UAAMC,SAAQ,IAAIC,OAAMF,SAAQ;AAChC,IAAAA,UAAS,QAAQ,CAAC,UAAW,MAAM,SAASC,MAAM;AAClD,aAASA;AAAA,EACb,WACS,WAAW,IAAI,GAAG;AACvB,UAAMD,YAAW,YAAY,cAAc,KAAK,QAAQ,IAAI,CAAC;AAC7D,UAAMC,SAAQ,IAAI,SAASD,SAAQ;AACnC,IAAAA,UAAS,QAAQ,CAAC,UAAW,MAAM,SAASC,MAAM;AAClD,QAAI,KAAK,QAAQ,GAAG;AAChB,MAAAA,OAAM,QAAQ,IAAI,KAAK,QAAQ;AAAA,IACnC;AACA,aAASA;AAAA,EACb,WACS,YAAY,IAAI,GAAG;AACxB,UAAM,cAAc,IAAI,sBAAsB,KAAK,MAAM,KAAK,IAAI;AAClE,QAAI,KAAK,QAAQ,KAAK,MAAM;AACxB,kBAAY,QAAQ,IAAI,KAAK,QAAQ;AACrC,kBAAY,YAAY,IAAI,KAAK,YAAY;AAC7C,kBAAY,YAAY,IAAI,KAAK,YAAY;AAAA,IACjD;AACA,aAAS;AAAA,EACb,OACK;AACD,UAAM,IAAI,MAAM,wBAAwB,KAAK,MAAM;AAAA,EACvD;AACA,SAAO,aAAa,KAAK;AACzB,SAAO,WAAW,KAAK;AACvB,MAAI,KAAK,sBAAsB,MAAM;AACjC,WAAO,qBAAqB,KAAK;AAAA,EACrC;AACA,SAAO;AACX;AACA,SAAS,cAAc,QAAQ;AAC3B,QAAMD,YAAW,OAAO,IAAI,CAAC,UAAU,UAAU,OAAO,IAAI,CAAC;AAC7D,WAAS,IAAI,GAAG,IAAIA,UAAS,QAAQ,KAAK;AACtC,IAAAA,UAAS,CAAC,EAAE,OAAOA,UAAS,IAAI,CAAC;AACjC,IAAAA,UAAS,IAAI,CAAC,EAAE,OAAOA,UAAS,CAAC;AAAA,EACrC;AACA,SAAOA;AACX;AAjVA,IAKa,MAyDA,UAsBAF,OAYAC,UAYA,uBAaA,kBA+BAG,QAYA,UAYA;AAhLb;AAAA;AAAA;AAAA;AAAA;AAAA;AAKO,IAAM,OAAN,MAAW;AAAA,MACd,cAAc;AAEV,aAAK,SAAS;AAEd,aAAK,OAAO;AAEZ,aAAK,OAAO;AAEZ,aAAK,aAAa;AAElB,aAAK,WAAW;AAAA,MACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,IAAI,aAAa;AACb,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,IAAI,WAAWC,SAAQ;AACnB,aAAK,SAASA;AAAA,MAClB;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA,IAAI,kBAAkB;AAClB,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,IAAI,gBAAgBC,OAAM;AACtB,aAAK,OAAOA;AAAA,MAChB;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA,IAAI,cAAc;AACd,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,IAAI,YAAYC,OAAM;AAClB,aAAK,OAAOA;AAAA,MAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,UAAU,YAAY,OAAO;AACzB,eAAO,UAAU,MAAM,SAAS;AAAA,MACpC;AAAA,IACJ;AAIO,IAAM,WAAN,cAAuB,KAAK;AAAA;AAAA;AAAA;AAAA,MAI/B,YAAYC,OAAM;AACd,cAAM;AACN,aAAK,OAAOA;AAAA,MAChB;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA,IAAI,YAAY;AACZ,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,IAAI,UAAUA,OAAM;AAChB,aAAK,OAAOA;AAAA,MAChB;AAAA,IACJ;AAIO,IAAMR,QAAN,cAAmB,SAAS;AAAA,MAC/B,cAAc;AACV,cAAM,GAAG,SAAS;AAClB,aAAK,OAAO,YAAY;AAAA,MAC5B;AAAA,MACA,IAAI,WAAW;AACX,eAAO;AAAA,MACX;AAAA,IACJ;AAIO,IAAMC,WAAN,cAAsB,SAAS;AAAA,MAClC,cAAc;AACV,cAAM,GAAG,SAAS;AAClB,aAAK,OAAO,YAAY;AAAA,MAC5B;AAAA,MACA,IAAI,WAAW;AACX,eAAO;AAAA,MACX;AAAA,IACJ;AAIO,IAAM,wBAAN,cAAoC,SAAS;AAAA,MAChD,YAAY,MAAMO,OAAM;AACpB,cAAMA,KAAI;AACV,aAAK,OAAO;AACZ,aAAK,OAAO,YAAY;AAAA,MAC5B;AAAA,MACA,IAAI,WAAW;AACX,eAAO;AAAA,MACX;AAAA,IACJ;AAIO,IAAM,mBAAN,cAA+B,KAAK;AAAA;AAAA;AAAA;AAAA,MAIvC,YAAYN,WAAU;AAClB,cAAM;AACN,aAAK,WAAWA;AAAA,MACpB;AAAA;AAAA;AAAA,MAGA,IAAI,aAAa;AACb,YAAIO;AACJ,gBAAQA,MAAK,KAAK,SAAS,CAAC,OAAO,QAAQA,QAAO,SAASA,MAAK;AAAA,MACpE;AAAA;AAAA,MAEA,IAAI,YAAY;AACZ,eAAO,KAAK,SAAS,SAAS,IACxB,KAAK,SAAS,KAAK,SAAS,SAAS,CAAC,IACtC;AAAA,MACV;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA,IAAI,aAAa;AACb,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,IAAI,WAAWP,WAAU;AACrB,aAAK,WAAWA;AAAA,MACpB;AAAA,IACJ;AACO,IAAME,SAAN,cAAoB,iBAAiB;AAAA,MACxC,cAAc;AACV,cAAM,GAAG,SAAS;AAClB,aAAK,OAAO,YAAY;AAAA,MAC5B;AAAA,MACA,IAAI,WAAW;AACX,eAAO;AAAA,MACX;AAAA,IACJ;AAIO,IAAM,WAAN,cAAuB,iBAAiB;AAAA,MAC3C,cAAc;AACV,cAAM,GAAG,SAAS;AAClB,aAAK,OAAO,YAAY;AAAA,MAC5B;AAAA,MACA,IAAI,WAAW;AACX,eAAO;AAAA,MACX;AAAA,IACJ;AAIO,IAAM,UAAN,cAAsB,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAM1C,YAAY,MAAM,SAASF,YAAW,CAAC,GAAG,OAAO,SAAS,WACpD,YAAY,SACZ,SAAS,UACL,YAAY,QACZ,YAAY,KAAK;AACvB,cAAMA,SAAQ;AACd,aAAK,OAAO;AACZ,aAAK,UAAU;AACf,aAAK,OAAO;AAAA,MAChB;AAAA,MACA,IAAI,WAAW;AACX,eAAO;AAAA,MACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,IAAI,UAAU;AACV,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,IAAI,QAAQ,MAAM;AACd,aAAK,OAAO;AAAA,MAChB;AAAA,MACA,IAAI,aAAa;AACb,eAAO,OAAO,KAAK,KAAK,OAAO,EAAE,IAAI,CAAC,SAAS;AAC3C,cAAIO,KAAI;AACR,iBAAQ;AAAA,YACJ;AAAA,YACA,OAAO,KAAK,QAAQ,IAAI;AAAA,YACxB,YAAYA,MAAK,KAAK,oBAAoB,OAAO,QAAQA,QAAO,SAAS,SAASA,IAAG,IAAI;AAAA,YACzF,SAAS,KAAK,KAAK,iBAAiB,OAAO,QAAQ,OAAO,SAAS,SAAS,GAAG,IAAI;AAAA,UACvF;AAAA,QACJ,CAAC;AAAA,MACL;AAAA,IACJ;AAAA;AAAA;;;ACzNA,IAIMC,cAKO;AATb,IAAAC,YAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA,IAAMD,eAAc;AAAA,MAChB,kBAAkB;AAAA,MAClB,gBAAgB;AAAA,MAChB,SAAS;AAAA,IACb;AACO,IAAM,aAAN,MAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMpB,YAAY,UAAU,SAAS,WAAW;AAEtC,aAAK,MAAM,CAAC;AAEZ,aAAK,OAAO,IAAI,SAAS,KAAK,GAAG;AAEjC,aAAK,OAAO;AAEZ,aAAK,WAAW,CAAC,KAAK,IAAI;AAE1B,aAAK,WAAW;AAEhB,aAAK,SAAS;AAEd,YAAI,OAAO,YAAY,YAAY;AAC/B,sBAAY;AACZ,oBAAUA;AAAA,QACd;AACA,YAAI,OAAO,aAAa,UAAU;AAC9B,oBAAU;AACV,qBAAW;AAAA,QACf;AACA,aAAK,WAAW,aAAa,QAAQ,aAAa,SAAS,WAAW;AACtE,aAAK,UAAU,YAAY,QAAQ,YAAY,SAAS,UAAUA;AAClE,aAAK,YAAY,cAAc,QAAQ,cAAc,SAAS,YAAY;AAAA,MAC9E;AAAA,MACA,aAAa,QAAQ;AACjB,aAAK,SAAS;AAAA,MAClB;AAAA;AAAA,MAEA,UAAU;AACN,aAAK,MAAM,CAAC;AACZ,aAAK,OAAO,IAAI,SAAS,KAAK,GAAG;AACjC,aAAK,OAAO;AACZ,aAAK,WAAW,CAAC,KAAK,IAAI;AAC1B,aAAK,WAAW;AAChB,aAAK,SAAS;AAAA,MAClB;AAAA;AAAA,MAEA,QAAQ;AACJ,YAAI,KAAK;AACL;AACJ,aAAK,OAAO;AACZ,aAAK,SAAS;AACd,aAAK,eAAe,IAAI;AAAA,MAC5B;AAAA,MACA,QAAQ,OAAO;AACX,aAAK,eAAe,KAAK;AAAA,MAC7B;AAAA,MACA,aAAa;AACT,aAAK,WAAW;AAChB,cAAM,OAAO,KAAK,SAAS,IAAI;AAC/B,YAAI,KAAK,QAAQ,gBAAgB;AAC7B,eAAK,WAAW,KAAK,OAAO;AAAA,QAChC;AACA,YAAI,KAAK;AACL,eAAK,UAAU,IAAI;AAAA,MAC3B;AAAA,MACA,UAAU,MAAM,SAAS;AACrB,cAAM,OAAO,KAAK,QAAQ,UAAU,YAAY,MAAM;AACtD,cAAM,UAAU,IAAI,QAAQ,MAAM,SAAS,QAAW,IAAI;AAC1D,aAAK,QAAQ,OAAO;AACpB,aAAK,SAAS,KAAK,OAAO;AAAA,MAC9B;AAAA,MACA,OAAOE,OAAM;AACT,cAAM,EAAE,SAAS,IAAI;AACrB,YAAI,YAAY,SAAS,SAAS,YAAY,MAAM;AAChD,mBAAS,QAAQA;AACjB,cAAI,KAAK,QAAQ,gBAAgB;AAC7B,qBAAS,WAAW,KAAK,OAAO;AAAA,UACpC;AAAA,QACJ,OACK;AACD,gBAAM,OAAO,IAAIC,MAAKD,KAAI;AAC1B,eAAK,QAAQ,IAAI;AACjB,eAAK,WAAW;AAAA,QACpB;AAAA,MACJ;AAAA,MACA,UAAUA,OAAM;AACZ,YAAI,KAAK,YAAY,KAAK,SAAS,SAAS,YAAY,SAAS;AAC7D,eAAK,SAAS,QAAQA;AACtB;AAAA,QACJ;AACA,cAAM,OAAO,IAAIE,SAAQF,KAAI;AAC7B,aAAK,QAAQ,IAAI;AACjB,aAAK,WAAW;AAAA,MACpB;AAAA,MACA,eAAe;AACX,aAAK,WAAW;AAAA,MACpB;AAAA,MACA,eAAe;AACX,cAAMG,QAAO,IAAIF,MAAK,EAAE;AACxB,cAAM,OAAO,IAAIG,OAAM,CAACD,KAAI,CAAC;AAC7B,aAAK,QAAQ,IAAI;AACjB,QAAAA,MAAK,SAAS;AACd,aAAK,WAAWA;AAAA,MACpB;AAAA,MACA,aAAa;AACT,aAAK,WAAW;AAAA,MACpB;AAAA,MACA,wBAAwB,MAAMH,OAAM;AAChC,cAAM,OAAO,IAAI,sBAAsB,MAAMA,KAAI;AACjD,aAAK,QAAQ,IAAI;AAAA,MACrB;AAAA,MACA,eAAe,OAAO;AAClB,YAAI,OAAO,KAAK,aAAa,YAAY;AACrC,eAAK,SAAS,OAAO,KAAK,GAAG;AAAA,QACjC,WACS,OAAO;AACZ,gBAAM;AAAA,QACV;AAAA,MACJ;AAAA,MACA,QAAQ,MAAM;AACV,cAAMK,UAAS,KAAK,SAAS,KAAK,SAAS,SAAS,CAAC;AACrD,cAAM,kBAAkBA,QAAO,SAASA,QAAO,SAAS,SAAS,CAAC;AAClE,YAAI,KAAK,QAAQ,kBAAkB;AAC/B,eAAK,aAAa,KAAK,OAAO;AAAA,QAClC;AACA,YAAI,KAAK,QAAQ,gBAAgB;AAC7B,eAAK,WAAW,KAAK,OAAO;AAAA,QAChC;AACA,QAAAA,QAAO,SAAS,KAAK,IAAI;AACzB,YAAI,iBAAiB;AACjB,eAAK,OAAO;AACZ,0BAAgB,OAAO;AAAA,QAC3B;AACA,aAAK,SAASA;AACd,aAAK,WAAW;AAAA,MACpB;AAAA,IACJ;AAAA;AAAA;;;AChJA,IAEA;AAFA;;;;;AAEA,IAAA,2BAAe,IAAI;;MAEf,4h8CACK,MAAM,EAAE,EACR,IAAI,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;IAAC;;;;;ACNpC,IAEA;AAFA;;;;;AAEA,IAAA,0BAAe,IAAI;;MAEf,2EACK,MAAM,EAAE,EACR,IAAI,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;IAAC;;;;;ACsD9B,SAAU,iBAAiB,WAAiB;;AAC9C,MAAK,aAAa,SAAU,aAAa,SAAW,YAAY,SAAU;AACtE,WAAO;;AAGX,UAAOC,MAAA,UAAU,IAAI,SAAS,OAAC,QAAAA,QAAA,SAAAA,MAAI;AACvC;AAlEA,QAEM,WAmCO;AArCb;;;;;AAEA,IAAM,YAAY,oBAAI,IAAI;MACtmBAAa,QAAA,OAAA,SAAA,KACpB,SAAU,WAAiB;AACvB,UAAI,SAAS;AAEb,UAAI,YAAY,OAAQ;AACpB,qBAAa;AACb,kBAAU,OAAO,aACX,cAAc,KAAM,OAAS,KAAM;AAEzC,oBAAY,QAAU,YAAY;;AAGtC,gBAAU,OAAO,aAAa,SAAS;AACvC,aAAO;IACX;;;;;AClBJ,SAAS,SAAS,MAAY;AAC1B,SAAO,QAAQ,UAAU,QAAQ,QAAQ,UAAU;AACvD;AAEA,SAAS,uBAAuB,MAAY;AACxC,SACK,QAAQ,UAAU,WAAW,QAAQ,UAAU,WAC/C,QAAQ,UAAU,WAAW,QAAQ,UAAU;AAExD;AAEA,SAAS,oBAAoB,MAAY;AACrC,SACK,QAAQ,UAAU,WAAW,QAAQ,UAAU,WAC/C,QAAQ,UAAU,WAAW,QAAQ,UAAU,WAChD,SAAS,IAAI;AAErB;AAQA,SAAS,8BAA8B,MAAY;AAC/C,SAAO,SAAS,UAAU,UAAU,oBAAoB,IAAI;AAChE;AA0ZA,SAAS,WAAW,YAAuB;AACvC,MAAI,MAAM;AACV,QAAM,UAAU,IAAI,cAChB,YACA,CAAC,QAAS,OAAO,cAAc,GAAG,CAAE;AAGxC,SAAO,SAAS,eACZ,KACA,YAAwB;AAExB,QAAI,YAAY;AAChB,QAAI,SAAS;AAEb,YAAQ,SAAS,IAAI,QAAQ,KAAK,MAAM,MAAM,GAAG;AAC7C,aAAO,IAAI,MAAM,WAAW,MAAM;AAElC,cAAQ,YAAY,UAAU;AAE9B,YAAM,MAAM,QAAQ;QAChB;;QAEA,SAAS;MAAC;AAGd,UAAI,MAAM,GAAG;AACT,oBAAY,SAAS,QAAQ,IAAG;AAChC;;AAGJ,kBAAY,SAAS;AAErB,eAAS,QAAQ,IAAI,YAAY,IAAI;;AAGzC,UAAM,SAAS,MAAM,IAAI,MAAM,SAAS;AAGxC,UAAM;AAEN,WAAO;EACX;AACJ;AAYM,SAAU,gBACZ,YACA,SACA,SACA,MAAY;AAEZ,QAAM,eAAe,UAAU,aAAa,kBAAkB;AAC9D,QAAM,aAAa,UAAU,aAAa;AAG1C,MAAI,gBAAgB,GAAG;AACnB,WAAO,eAAe,KAAK,SAAS,aAAa,UAAU;;AAI/D,MAAI,YAAY;AACZ,UAAM,QAAQ,OAAO;AAErB,WAAO,QAAQ,KAAK,SAAS,cACvB,KACA,WAAW,UAAU,KAAK,IAAI;;AAMxC,MAAI,KAAK;AACT,MAAI,KAAK,KAAK,cAAc;AAE5B,SAAO,MAAM,IAAI;AACb,UAAM,MAAO,KAAK,OAAQ;AAC1B,UAAM,SAAS,WAAW,GAAG;AAE7B,QAAI,SAAS,MAAM;AACf,WAAK,MAAM;eACJ,SAAS,MAAM;AACtB,WAAK,MAAM;WACR;AACH,aAAO,WAAW,MAAM,WAAW;;;AAI3C,SAAO;AACX;AAzjBA,IAWW,WAgBL,cAEM,cAmCD,oBAQC,cAuBC,eA4dP,aACA;AA5jBN;;;;;;AACA;AACA;AAOA;AAEA,KAAA,SAAWC,YAAS;AAChB,MAAAA,WAAAA,WAAA,KAAA,IAAA,EAAA,IAAA;AACA,MAAAA,WAAAA,WAAA,MAAA,IAAA,EAAA,IAAA;AACA,MAAAA,WAAAA,WAAA,QAAA,IAAA,EAAA,IAAA;AACA,MAAAA,WAAAA,WAAA,MAAA,IAAA,EAAA,IAAA;AACA,MAAAA,WAAAA,WAAA,MAAA,IAAA,EAAA,IAAA;AACA,MAAAA,WAAAA,WAAA,SAAA,IAAA,EAAA,IAAA;AACA,MAAAA,WAAAA,WAAA,SAAA,IAAA,GAAA,IAAA;AACA,MAAAA,WAAAA,WAAA,SAAA,IAAA,GAAA,IAAA;AACA,MAAAA,WAAAA,WAAA,SAAA,IAAA,GAAA,IAAA;AACA,MAAAA,WAAAA,WAAA,SAAA,IAAA,EAAA,IAAA;AACA,MAAAA,WAAAA,WAAA,SAAA,IAAA,EAAA,IAAA;AACA,MAAAA,WAAAA,WAAA,SAAA,IAAA,EAAA,IAAA;IACJ,GAbW,cAAA,YAAS,CAAA,EAAA;AAgBpB,IAAM,eAAe;AAErB,KAAA,SAAYC,eAAY;AACpB,MAAAA,cAAAA,cAAA,cAAA,IAAA,KAAA,IAAA;AACA,MAAAA,cAAAA,cAAA,eAAA,IAAA,KAAA,IAAA;AACA,MAAAA,cAAAA,cAAA,YAAA,IAAA,GAAA,IAAA;IACJ,GAJY,iBAAA,eAAY,CAAA,EAAA;AAmCxB,KAAA,SAAWC,qBAAkB;AACzB,MAAAA,oBAAAA,oBAAA,aAAA,IAAA,CAAA,IAAA;AACA,MAAAA,oBAAAA,oBAAA,cAAA,IAAA,CAAA,IAAA;AACA,MAAAA,oBAAAA,oBAAA,gBAAA,IAAA,CAAA,IAAA;AACA,MAAAA,oBAAAA,oBAAA,YAAA,IAAA,CAAA,IAAA;AACA,MAAAA,oBAAAA,oBAAA,aAAA,IAAA,CAAA,IAAA;IACJ,GANW,uBAAA,qBAAkB,CAAA,EAAA;AAQ7B,KAAA,SAAYC,eAAY;AAEpB,MAAAA,cAAAA,cAAA,QAAA,IAAA,CAAA,IAAA;AAEA,MAAAA,cAAAA,cAAA,QAAA,IAAA,CAAA,IAAA;AAEA,MAAAA,cAAAA,cAAA,WAAA,IAAA,CAAA,IAAA;IACJ,GAPY,iBAAA,eAAY,CAAA,EAAA;AAuBlB,IAAO,gBAAP,MAAoB;MACtB,YAEqB,YAUA,eAEA,QAA4B;AAZ5B,aAAA,aAAA;AAUA,aAAA,gBAAA;AAEA,aAAA,SAAA;AAIb,aAAA,QAAQ,mBAAmB;AAE3B,aAAA,WAAW;AAOX,aAAA,SAAS;AAGT,aAAA,YAAY;AAEZ,aAAA,SAAS;AAET,aAAA,aAAa,aAAa;MAnB/B;;MAsBH,YAAY,YAAwB;AAChC,aAAK,aAAa;AAClB,aAAK,QAAQ,mBAAmB;AAChC,aAAK,SAAS;AACd,aAAK,YAAY;AACjB,aAAK,SAAS;AACd,aAAK,WAAW;MACpB;;;;;;;;;;;;MAaA,MAAM,KAAa,QAAc;AAC7B,gBAAQ,KAAK,OAAO;UAChB,KAAK,mBAAmB,aAAa;AACjC,gBAAI,IAAI,WAAW,MAAM,MAAM,UAAU,KAAK;AAC1C,mBAAK,QAAQ,mBAAmB;AAChC,mBAAK,YAAY;AACjB,qBAAO,KAAK,kBAAkB,KAAK,SAAS,CAAC;;AAEjD,iBAAK,QAAQ,mBAAmB;AAChC,mBAAO,KAAK,iBAAiB,KAAK,MAAM;;UAG5C,KAAK,mBAAmB,cAAc;AAClC,mBAAO,KAAK,kBAAkB,KAAK,MAAM;;UAG7C,KAAK,mBAAmB,gBAAgB;AACpC,mBAAO,KAAK,oBAAoB,KAAK,MAAM;;UAG/C,KAAK,mBAAmB,YAAY;AAChC,mBAAO,KAAK,gBAAgB,KAAK,MAAM;;UAG3C,KAAK,mBAAmB,aAAa;AACjC,mBAAO,KAAK,iBAAiB,KAAK,MAAM;;;MAGpD;;;;;;;;;;MAWQ,kBAAkB,KAAa,QAAc;AACjD,YAAI,UAAU,IAAI,QAAQ;AACtB,iBAAO;;AAGX,aAAK,IAAI,WAAW,MAAM,IAAI,kBAAkB,UAAU,SAAS;AAC/D,eAAK,QAAQ,mBAAmB;AAChC,eAAK,YAAY;AACjB,iBAAO,KAAK,gBAAgB,KAAK,SAAS,CAAC;;AAG/C,aAAK,QAAQ,mBAAmB;AAChC,eAAO,KAAK,oBAAoB,KAAK,MAAM;MAC/C;MAEQ,mBACJ,KACA,OACAC,MACA,MAAY;AAEZ,YAAI,UAAUA,MAAK;AACf,gBAAM,aAAaA,OAAM;AACzB,eAAK,SACD,KAAK,SAAS,KAAK,IAAI,MAAM,UAAU,IACvC,SAAS,IAAI,OAAO,OAAO,UAAU,GAAG,IAAI;AAChD,eAAK,YAAY;;MAEzB;;;;;;;;;;MAWQ,gBAAgB,KAAa,QAAc;AAC/C,cAAM,WAAW;AAEjB,eAAO,SAAS,IAAI,QAAQ;AACxB,gBAAM,OAAO,IAAI,WAAW,MAAM;AAClC,cAAI,SAAS,IAAI,KAAK,uBAAuB,IAAI,GAAG;AAChD,sBAAU;iBACP;AACH,iBAAK,mBAAmB,KAAK,UAAU,QAAQ,EAAE;AACjD,mBAAO,KAAK,kBAAkB,MAAM,CAAC;;;AAI7C,aAAK,mBAAmB,KAAK,UAAU,QAAQ,EAAE;AAEjD,eAAO;MACX;;;;;;;;;;MAWQ,oBAAoB,KAAa,QAAc;AACnD,cAAM,WAAW;AAEjB,eAAO,SAAS,IAAI,QAAQ;AACxB,gBAAM,OAAO,IAAI,WAAW,MAAM;AAClC,cAAI,SAAS,IAAI,GAAG;AAChB,sBAAU;iBACP;AACH,iBAAK,mBAAmB,KAAK,UAAU,QAAQ,EAAE;AACjD,mBAAO,KAAK,kBAAkB,MAAM,CAAC;;;AAI7C,aAAK,mBAAmB,KAAK,UAAU,QAAQ,EAAE;AAEjD,eAAO;MACX;;;;;;;;;;;;;;MAeQ,kBAAkB,QAAgB,gBAAsB;;AAE5D,YAAI,KAAK,YAAY,gBAAgB;AACjC,WAAAC,MAAA,KAAK,YAAM,QAAAA,QAAA,SAAA,SAAAA,IAAE,2CACT,KAAK,QAAQ;AAEjB,iBAAO;;AAIX,YAAI,WAAW,UAAU,MAAM;AAC3B,eAAK,YAAY;mBACV,KAAK,eAAe,aAAa,QAAQ;AAChD,iBAAO;;AAGX,aAAK,cAAc,iBAAiB,KAAK,MAAM,GAAG,KAAK,QAAQ;AAE/D,YAAI,KAAK,QAAQ;AACb,cAAI,WAAW,UAAU,MAAM;AAC3B,iBAAK,OAAO,wCAAuC;;AAGvD,eAAK,OAAO,kCAAkC,KAAK,MAAM;;AAG7D,eAAO,KAAK;MAChB;;;;;;;;;;MAWQ,iBAAiB,KAAa,QAAc;AAChD,cAAM,EAAE,WAAU,IAAK;AACvB,YAAI,UAAU,WAAW,KAAK,SAAS;AAEvC,YAAI,eAAe,UAAU,aAAa,iBAAiB;AAE3D,eAAO,SAAS,IAAI,QAAQ,UAAU,KAAK,UAAU;AACjD,gBAAM,OAAO,IAAI,WAAW,MAAM;AAElC,eAAK,YAAY,gBACb,YACA,SACA,KAAK,YAAY,KAAK,IAAI,GAAG,WAAW,GACxC,IAAI;AAGR,cAAI,KAAK,YAAY,GAAG;AACpB,mBAAO,KAAK,WAAW;YAElB,KAAK,eAAe,aAAa;aAE7B,gBAAgB;YAEb,8BAA8B,IAAI,KACxC,IACA,KAAK,6BAA4B;;AAG3C,oBAAU,WAAW,KAAK,SAAS;AACnC,yBAAe,UAAU,aAAa,iBAAiB;AAGvD,cAAI,gBAAgB,GAAG;AAEnB,gBAAI,SAAS,UAAU,MAAM;AACzB,qBAAO,KAAK,oBACR,KAAK,WACL,aACA,KAAK,WAAW,KAAK,MAAM;;AAKnC,gBAAI,KAAK,eAAe,aAAa,QAAQ;AACzC,mBAAK,SAAS,KAAK;AACnB,mBAAK,YAAY,KAAK;AACtB,mBAAK,SAAS;;;;AAK1B,eAAO;MACX;;;;;;MAOQ,+BAA4B;;AAChC,cAAM,EAAE,QAAQ,WAAU,IAAK;AAE/B,cAAM,eACD,WAAW,MAAM,IAAI,aAAa,iBAAiB;AAExD,aAAK,oBAAoB,QAAQ,aAAa,KAAK,QAAQ;AAC3D,SAAAA,MAAA,KAAK,YAAM,QAAAA,QAAA,SAAA,SAAAA,IAAE,wCAAuC;AAEpD,eAAO,KAAK;MAChB;;;;;;;;;;MAWQ,oBACJ,QACA,aACA,UAAgB;AAEhB,cAAM,EAAE,WAAU,IAAK;AAEvB,aAAK,cACD,gBAAgB,IACV,WAAW,MAAM,IAAI,CAAC,aAAa,eACnC,WAAW,SAAS,CAAC,GAC3B,QAAQ;AAEZ,YAAI,gBAAgB,GAAG;AAEnB,eAAK,cAAc,WAAW,SAAS,CAAC,GAAG,QAAQ;;AAGvD,eAAO;MACX;;;;;;;;MASA,MAAG;;AACC,gBAAQ,KAAK,OAAO;UAChB,KAAK,mBAAmB,aAAa;AAEjC,mBAAO,KAAK,WAAW,MAClB,KAAK,eAAe,aAAa,aAC9B,KAAK,WAAW,KAAK,aACvB,KAAK,6BAA4B,IACjC;;UAGV,KAAK,mBAAmB,gBAAgB;AACpC,mBAAO,KAAK,kBAAkB,GAAG,CAAC;;UAEtC,KAAK,mBAAmB,YAAY;AAChC,mBAAO,KAAK,kBAAkB,GAAG,CAAC;;UAEtC,KAAK,mBAAmB,cAAc;AAClC,aAAAA,MAAA,KAAK,YAAM,QAAAA,QAAA,SAAA,SAAAA,IAAE,2CACT,KAAK,QAAQ;AAEjB,mBAAO;;UAEX,KAAK,mBAAmB,aAAa;AAEjC,mBAAO;;;MAGnB;;AA4GJ,IAAM,cAAc,WAAW,wBAAc;AAC7C,IAAM,aAAa,WAAW,uBAAa;;;;;ACtjB3C,SAAS,YACL,KAAM;AAEN,WAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACjC,QAAI,CAAC,EAAE,CAAC,KAAK,IAAI,IAAI,CAAC,EAAE,CAAC,IAAI;;AAEjC,SAAO;AACX;AAbA,IAgBA;AAhBA;;;;;AAgBA,IAAA,sBAAe,IAAI,IAA0C,4BAAY,CAAC,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,IAAG,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,IAAG,SAAS,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,EAAC,GAAE,QAAO,GAAE,MAAK,GAAE,SAAQ,CAAC,GAAE,CAAC,GAAE,EAAC,GAAE,YAAW,GAAE,MAAK,GAAE,QAAO,CAAC,GAAE,CAAC,GAAE,EAAC,GAAE,QAAO,GAAE,MAAK,GAAE,SAAQ,CAAC,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,IAAG,UAAU,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,oBAAoB,GAAE,CAAC,GAAE,EAAC,GAAE,KAAI,GAAE,UAAS,CAAC,GAAE,CAAC,IAAG,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,IAAG,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,aAAa,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,aAAakBAAkB,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,oBAAoB,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,IAAG,aAAa,GAAE,CAAC,KAAI,SAAS,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,MAAM,GAAE,CAAC,GAAE,MAAM,GAAE,CAAC,GAAE,MAAM,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,MAAM,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,MAAM,GAAE,CAAC,GAAE,MAAM,GAAE,CAAC,GAAE,MAAM,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,MAAM,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,IAAG,UAAU,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,eAAe,GAAE,CAAC,IAAG,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE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",
  "names": ["ElementType", "isTag", "Text", "Comment", "children", "clone", "CDATA", "parent", "prev", "next", "data", "_a", "defaultOpts", "init_esm", "data", "Text", "Comment", "text", "CDATA", "parent", "_a", "CharCodes", "BinTrieFlags", "EntityDecoderState", "DecodingMode", "end", "_a", "match", "next", "map", "escape", "data", "index", "init_esm", "EntityLevel", "EncodingMode", "val", "attributes", "_a", "data", "init_esm", "node", "isTag", "init_esm", "parent", "siblings", "prev", "next", "_a", "isTag", "init_esm", "prev", "next", "parent", "isTag", "init_esm", "isTag", "init_esm", "data", "siblings", "init_esm", "DocumentPosition", "children", "href", "_a", "fetch", "prop", "val", "esm_exports", "isTag", "init_esm", "render", "data", "next", "init_esm", "clone", "root", "init_esm", "CharacterCodes", "isTag", "_a", "prop", "val", "end", "index", "init_esm", "init_types", "SelectorType", "AttributeAction", "subselects", "getName", "match", "data", "init_types", "init_types", "trueFunc", "isTraversal", "_a", "init_attributes", "next", "data", "adapter", "attr", "boolbase", "_a", "parse", "init_parse", "boolbase", "index", "import_boolbase", "parse", "init_esm", "init_parse", "next", "adapter", "parent", "boolbase", "import_boolbase", "init_esm", "text", "contains", "siblings", "adapter", "elem", "siblings", "next", "adapter", "boolbase", "siblings", "import_boolbase", "compileToken", "isTraversal", "next", "compileToken", "data", "_a", "adapter", "parent", "next", "compileToken", "elem", "siblings", "init_attributes", "compile", "next", "data", "adapter", "parent", "isTraversal", "_a", "first", "boolbase", "import_boolbase", "init_compile", "_a", "esm_exports", "select", "adapter", "import_boolbase", "compile", "init_esm", "init_compile", "boolbase", "s", "filter", "data", "init_helpers", "is", "filter", "data", "isTag", "root", "_a", "find", "esm_exports", "boolbase", "init_esm", "init_helpers", "filter", "find", "is", "_a", "fn", "nextElem", "next", "isTag", "val", "match", "root", "end", "contents", "init_esm", "parent", "parse", "isDocument", "root", "parent", "init_parse", "init_esm", "append", "html", "prepend", "text", "clone", "parent", "prev", "next", "_a", "wrap", "isTag", "siblings", "index", "Text", "init_manipulation", "init_esm", "init_parse", "children", "prop", "val", "isTag", "parse", "data", "isTag", "_a", "val", "init_manipulation", "root", "parse", "render", "load", "isDocument", "content", "options", "root", "CODE_POINTS", "ERR", "TokenType", "_a", "NS", "ATTRS", "DOCUMENT_MODE", "TAG_NAMES", "TAG_ID", "isAsciiAlphaNumeric", "isWhitespace", "isEntityInAttributeInvalidEnd", "State", "_a", "EntryType", "entry", "data", "text", "attr", "attr", "_a", "InsertionMode", "html", "parent", "siblings", "defaultOpts", "html", "attr", "parent", "parse", "html", "createTextNode", "Text", "init_dist", "init_esm", "isTag", "data", "Comment", "prev", "next", "text", "_a", "isDocument", "parse", "index", "init_esm", "init_dist", "isWhitespace", "CharCodes", "isNumber", "State", "Tokenizer", "QuoteType", "Parser", "_a", "Tokenizer", "data", "index", "end", "slice", "data", "Parser", "init_esm", "parse", "esm_default", "contains", "merge", "parseHTML", "root", "init_esm", "init_parse", "isDocument", "init_esm", "html", "$", "match", "parse", "_a", "value", "index", "result", "_a", "index", "i", "parse", "end", "escapeRegex", "data", "next", "wrap", "wrap", "wrap", "facade", "data"]
}
